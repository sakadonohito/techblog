<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>設定構築 on 開発メモてきな</title>
    <link>http://tech.k-zak.com/categories/%E8%A8%AD%E5%AE%9A%E6%A7%8B%E7%AF%89/index.xml</link>
    <description>Recent content in 設定構築 on 開発メモてきな</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <atom:link href="http://tech.k-zak.com/categories/%E8%A8%AD%E5%AE%9A%E6%A7%8B%E7%AF%89/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>嘘でしょう。。。</title>
      <link>http://tech.k-zak.com/2015/03/08/ubuntu-wifi</link>
      <pubDate>Sun, 08 Mar 2015 05:02:32 +0000</pubDate>
      
      <guid>http://tech.k-zak.com/2015/03/08/ubuntu-wifi</guid>
      <description>

&lt;p&gt;&lt;a href=&#34;http://kazunoko.sakura.ne.jp/wordpress/wp-content/uploads/2009/10/chanmio.jpg&#34; rel=&#34;attachment wp-att-193&#34;&gt;&lt;img class=&#34;alignnone size-full wp-image-193&#34; src=&#34;http://kazunoko.sakura.ne.jp/wordpress/wp-content/uploads/2009/10/chanmio.jpg&#34; alt=&#34;chanmio&#34; width=&#34;128&#34; height=&#34;128&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;長い間悩まされていた問題が解決したかもしれないので、ここに書いておきましょう。&lt;/p&gt;

&lt;p&gt;実際に解決したかどうかは、会社と自宅とPocket-Wifiで何回かネットワークを切り替えてから。&lt;/p&gt;

&lt;h3 id=&#34;悩まされていた問題&#34;&gt;悩まされていた問題&lt;/h3&gt;

&lt;p&gt;会社やPocket-Wifiでは問題ないが、なぜか自宅のWifi環境だとMacのVM上のUbuntu(開発環境)のネットワークが繋がらなくなる。&lt;/p&gt;

&lt;p&gt;VMのネットワーク設定を「Macと共有」の時は問題なくて「自動検出」にするとVMのUbuntuのIPが正しく設定されない。&lt;/p&gt;

&lt;h3 id=&#34;ひとまず解決&#34;&gt;ひとまず解決？&lt;/h3&gt;

&lt;p&gt;前提として、このUbuntuはDesktop 14.04LTSです。なのでUbuntuServerの場合は違うかも。&lt;/p&gt;

&lt;p&gt;/etc/NetworkManager/system-connections/ 配下のネットワークの設定ファイルのファイル名に日本語(マルチバイト文字)が含まれていたので、ASCII文字のみに変更。&lt;/p&gt;

&lt;p&gt;/etc/NetworkManager/system-connections/ のファイル名を変更したものを開く&lt;/p&gt;

&lt;p&gt;この設定ファイルの中の「connection」にあるidの設定を変更したファイル名に合わせる。&lt;/p&gt;

&lt;p&gt;これだけでネットワークつながるようになった。というかipが正しくふられるようになった。&lt;/p&gt;

&lt;p&gt;まさかのマルチバイト文字ファイル名問題？&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>fmxj.js のサーバーサイドをPHPじゃなくてPerl(Mojolicious)で試す</title>
      <link>http://tech.k-zak.com/2015/02/16/challenge-fmxj</link>
      <pubDate>Mon, 16 Feb 2015 16:09:59 +0000</pubDate>
      
      <guid>http://tech.k-zak.com/2015/02/16/challenge-fmxj</guid>
      <description>&lt;p&gt;先日、SeedCodeの方がFileMakerのCustom Web Publishing の為のJavaScriptとServer side で使うPHPのサンプルをGithubで公開されてました。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/seedcode/fmxj&#34;&gt;https://github.com/seedcode/fmxj&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;概要としては、FileMaker Server の XML公開を使う。&lt;/p&gt;

&lt;p&gt;Web公開エンジンにXML公開のためのリクエストをJavaScriptで生成してサーバーサイドスクリプト(SeedCodeのサンプルではPHP)にpostする。&lt;/p&gt;

&lt;p&gt;◆ハマった事：サンプルPHPの内容&lt;/p&gt;

&lt;p&gt;サンプルのPHPをよく読んでなかった。。。&lt;/p&gt;

&lt;p&gt;JavaScriptからFileMakerのユーザーアカウントとパスワードをpost出来るようにキーバリューを元々のpostデータに加えている。それから本来のpostデータからおまけを除くための追加分のパラメータ文字数もpostに加えている。この辺りの仕様にもんりょりする。&lt;/p&gt;

&lt;p&gt;-db=dbname&amp;amp;-lay=layname&amp;amp;-query=(q1)&amp;amp;-q1=Status&amp;amp;-q1.value=Vendor&amp;amp;-findquery みたいな通常のクエリデータに&lt;/p&gt;

&lt;p&gt;u=undefined&amp;amp;p=undefined&amp;amp;l=コンテンツの文字数&lt;/p&gt;

&lt;p&gt;ていうのがくっついてPHPにpostされてくる。&lt;/p&gt;

&lt;p&gt;それをPHP側でphp://inputでリクエストのボディを取得して余計なパラメータを削ってpostデータを作り直してcurl使ってPOSTしてた。&lt;/p&gt;

&lt;p&gt;そこに気づかずperlで再現しようとした時にpostデータを丸投げしてエラーになってしまっていた。&lt;/p&gt;

&lt;p&gt;なんでpostデータをわざわざこねくり回してるんだろう？て思ってた。&lt;/p&gt;

&lt;p&gt;サンプルって事でいろいろハードコーディングされてるけど、気にしない。&lt;/p&gt;

&lt;p&gt;◆ハマった：Nginxの設定&lt;/p&gt;

&lt;p&gt;欲をかいてPerlでサーバーサイド書くにあたって、FastCGIでさらっと書くじゃなくてMojolicious使うことにしたら&lt;/p&gt;

&lt;p&gt;WebServer→Nginxでバーチャルホスト(hoge.sample.comみたいな)とmorboで127.0.0.1:3000で動くMojoliciousになって、何が起きたかって言うとクロスドメインの問題が発生してしまい、エラーになる。&lt;/p&gt;

&lt;p&gt;これについてはNginxの設定でproxy_passでMojoliciousにリクエストがリバースプロキシされるようにして解決。&lt;/p&gt;

&lt;p&gt;しかしNginx、デフォルトではContent-Typeの書き換えができず、JavaScriptにレスポンスされるデータがXMLになっていなくて、意図する結果に終わらない。既にあるヘッダーに値を追加する処理を行ってしまう。&lt;/p&gt;

&lt;p&gt;※Nginxで add_header Content-Type &amp;#8216;application/xml&amp;#8217;してもmime-typeの設定ファイルに追記しても&lt;/p&gt;

&lt;p&gt;　Content-Type text/html;charset=UTF-8に application/xmlの値が追記されるだけになる。&lt;/p&gt;

&lt;p&gt;その結果、fmxj.jsがXMLHttpRequestのresponseXMLに値がセットされない。そしてresponseXMLがあるの前提になっているXMLをパースする処理のところで結果が空欄になって処理が終わってしまう。&lt;/p&gt;

&lt;p&gt;最初fmxj.js内部を書き換えて(responseTextをXMLに変換して)みたんだけど、コアのライブラリを触るのはよくないので、Nginxでちゃんとヘッダを書き換えられる方法を調べる、nginx-extrasを追加でインストールするとmore-set-headerというのが使えるようになり、ヘッダーの書き換えができるようになるとの事だったのでインストール。&lt;/p&gt;

&lt;p&gt;自分はUbuntuの環境なので、&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;sudo apt-get install nginx-extras&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;後はNginxの設定ファイルに(厳密に言うとリクエストを受け付けるLocationディレクティブで)&lt;/p&gt;

&lt;p&gt;more_set_headers &amp;#8216;Content-Type: application/xml; charset=UTF8&amp;#8217;;&lt;/p&gt;

&lt;p&gt;を追記、more&amp;#8230;がヘッダーの追記ではなく書き換えなのでcharsetも忘れずに書く！&lt;/p&gt;

&lt;p&gt;これでようやく、Sample.html → fmxj.jsを使ってServerにpostリクエスト → 受けたリクエストをNginxがMojoliciousを動かしてるmorboにリバースプロキシ → MojoliciousがPOSTリクエスト受け取りXML公開のクエリパラメータ付きURLを生成して(生成しなおして)cURLをラップしたライブラリからPOST送信 → JavaScriptにレスポンスが返り、完成。&lt;/p&gt;

&lt;p&gt;いろいろとしょーもないミスを沢山した。CGIでサクッと試すだけにしておけば今頃はPythonもRubyも試せてかもしれないのに、残念でした。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>AnsibleのSSH設定について</title>
      <link>http://tech.k-zak.com/2015/02/08/ansible-ssh</link>
      <pubDate>Sun, 08 Feb 2015 14:43:15 +0000</pubDate>
      
      <guid>http://tech.k-zak.com/2015/02/08/ansible-ssh</guid>
      <description>&lt;p&gt;Ansibleがバージョンを上げた所為か今までのやり方だとSSHのコネクションエラーになるようになって、どうも&amp;#8211;ask-pass の引数付きにするとパスワードいれて処理ができる事はわかったんだけど、スマートじゃない。&lt;/p&gt;

&lt;p&gt;という事で調べた。&lt;/p&gt;

&lt;p&gt;結論としては、varsファイルに&lt;/p&gt;

&lt;p&gt;・ansible_ssh_user&lt;/p&gt;

&lt;p&gt;・ansible_ssh_pass&lt;/p&gt;

&lt;p&gt;・ansible_sudo_pass&lt;/p&gt;

&lt;p&gt;の3つを書いておきましょう。でした。&lt;/p&gt;

&lt;p&gt;最初に呼び出すsite.yml内で変数定義してもいいんだけど、group_varsディレクトリ内にhostsファイルで書くグループ名のyamlに書くのがいいかなって思う。&lt;/p&gt;

&lt;p&gt;例えばhostsファイルに&lt;/p&gt;

&lt;p&gt;`Ansibleがバージョンを上げた所為か今までのやり方だとSSHのコネクションエラーになるようになって、どうも&amp;#8211;ask-pass の引数付きにするとパスワードいれて処理ができる事はわかったんだけど、スマートじゃない。&lt;/p&gt;

&lt;p&gt;という事で調べた。&lt;/p&gt;

&lt;p&gt;結論としては、varsファイルに&lt;/p&gt;

&lt;p&gt;・ansible_ssh_user&lt;/p&gt;

&lt;p&gt;・ansible_ssh_pass&lt;/p&gt;

&lt;p&gt;・ansible_sudo_pass&lt;/p&gt;

&lt;p&gt;の3つを書いておきましょう。でした。&lt;/p&gt;

&lt;p&gt;最初に呼び出すsite.yml内で変数定義してもいいんだけど、group_varsディレクトリ内にhostsファイルで書くグループ名のyamlに書くのがいいかなって思う。&lt;/p&gt;

&lt;p&gt;例えばhostsファイルに&lt;/p&gt;

&lt;p&gt;`&lt;/p&gt;

&lt;p&gt;とか書いてグループ名が「dev」の場合に&lt;/p&gt;

&lt;p&gt;-playbook&lt;/p&gt;

&lt;p&gt;|&lt;/p&gt;

&lt;p&gt;|&amp;#8211;dev.yml&lt;/p&gt;

&lt;p&gt;|&lt;/p&gt;

&lt;p&gt;|&amp;#8211;group_vars&lt;/p&gt;

&lt;p&gt;|   |&lt;/p&gt;

&lt;p&gt;|   |&amp;#8211;dev.yml&lt;/p&gt;

&lt;p&gt;|&lt;/p&gt;

&lt;p&gt;|&amp;#8211;roles\※内容略&lt;/p&gt;

&lt;p&gt;|&lt;/p&gt;

&lt;p&gt;|&amp;#8211;site.yml&lt;/p&gt;

&lt;p&gt;みたいな感じで書く。&lt;/p&gt;

&lt;p&gt;group_varsのdev.ymlには上記のようなansible_xxx_xxxを変数定義しておくとグループに対してssh接続の時に定義された値が使われる。これにより&amp;#8211;ask-passの指定が必要なくなった。&lt;/p&gt;

&lt;p&gt;問題は1つあって、group_varsのdev.ymlは公開したくない場合多いよねって事。&lt;/p&gt;

&lt;p&gt;なので更に、ここでいうdev.ymlはansible-vaultコマンドを使って暗号化する。もしくはバージョン管理に含めない運用を行うって事が必要になる。暗号化する場合も復号に使うキー？　ソルトみたいなもん？を書いたファイルを作る必要があって、それがないと暗号と復号ができないんだけど、そのファイルをバージョン管理に含めないって運用にするなら、最初からdev.ymlを含めないでも一緒かなって思う。&lt;/p&gt;

&lt;p&gt;ansible-playbookを実行する時に復号のために&amp;#8211;vault-passの引数とそのファイルパスを渡さないといけないってのも&amp;#8211;ask-pass使うのと大差ないじゃんってなるから暗号化は必要な案件だけでいいかな。&lt;/p&gt;

&lt;p&gt;hostsファイルにhostの後に引数オプション的にansible_ssh_passとか書けばいいのだけれども、それもなんだかなー&lt;/p&gt;

&lt;p&gt;って事で、今後はgroup_varsもしくはglobalに認識されるような変数を定義するファイルにssh接続情報は書こうかと考えている。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Ubuntu14.04 でphpでメール受信とか</title>
      <link>http://tech.k-zak.com/2015/02/01/php-mail</link>
      <pubDate>Sun, 01 Feb 2015 14:51:57 +0000</pubDate>
      
      <guid>http://tech.k-zak.com/2015/02/01/php-mail</guid>
      <description>&lt;p&gt;## install postfix&lt;/p&gt;

&lt;p&gt;&amp;#8220;`&lt;/p&gt;

&lt;p&gt;sudo apt-get install postfix postfix-dev sasl2-bin&lt;/p&gt;

&lt;p&gt;sudo apt-get install dovecot-core dovecot-dev dovecot-pop3d dovecot-imapd dovecot-gssapt&lt;/p&gt;

&lt;p&gt;&amp;#8220;`&lt;/p&gt;

&lt;p&gt;## Settings&lt;/p&gt;

&lt;p&gt;&amp;#8220;`&lt;/p&gt;

&lt;p&gt;sudo cp /usr/lib/postfix/main.cf /etc/postfix/main.cf&lt;/p&gt;

&lt;p&gt;sudo emacs -nw /etc/postfix/main.cf&lt;/p&gt;

&lt;p&gt;&amp;#8220;`&lt;/p&gt;

&lt;p&gt;### 参考&lt;/p&gt;

&lt;p&gt;&amp;#8211; &lt;a href=&#34;http://www.server-world.info/query?os=Ubuntu_14.04&amp;amp;p=mail&#34;&gt;http://www.server-world.info/query?os=Ubuntu_14.04&amp;amp;p=mail&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&amp;#8211; &lt;a href=&#34;http://www.server-world.info/query?os=Ubuntu_14.04&amp;amp;p=mail&amp;amp;f=2&#34;&gt;http://www.server-world.info/query?os=Ubuntu_14.04&amp;amp;p=mail&amp;amp;f=2&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;### gmailに転送する設定に変更&lt;/p&gt;

&lt;p&gt;relayhostにgmailを指定&lt;/p&gt;

&lt;p&gt;パスワードの設定とかね。&lt;/p&gt;

&lt;p&gt;## phpでメールを受信出来るよう設定&lt;/p&gt;

&lt;p&gt;メールサーバ受信DNS設定とか面倒だからやめた。&lt;/p&gt;

&lt;p&gt;phpinfoを見ると案の定imap入ってませんでしたので、php5.5系の落としてきてimapのディレクトリ移動してphpize&lt;/p&gt;

&lt;p&gt;### configureで失敗する&lt;/p&gt;

&lt;p&gt;configureしたらutf8_mime2text()がうんたらと出てきた。&lt;/p&gt;

&lt;p&gt;ググると、どうもphpにimapとかメール関係入れる時にライブラリが足りないと出るエラーのようだ。&lt;/p&gt;

&lt;p&gt;sudo apt-cache search libc-client&lt;/p&gt;

&lt;p&gt;→libc-client2007e libc-client2007e-dev てのが出てくるので両方インストール&lt;/p&gt;

&lt;p&gt;### imapうまく動かない？&lt;/p&gt;

&lt;p&gt;この後無事imapインストールできたけどなぜか受信出来ない。いろいろ調べて片っ端からSSL関連インストールしたけどうまくいかない。&lt;/p&gt;

&lt;p&gt;### 何が原因だったのか不明&lt;/p&gt;

&lt;p&gt;結局、何かのSSL関係のライブラリインストールが最初足りなくてGmail受信失敗してた。&lt;/p&gt;

&lt;p&gt;gmailからさくらのレンサバのメールアカウントで試した場合はアカウント名の指定を間違えてた。&lt;/p&gt;

&lt;p&gt;テストで受信するだけだから、普通のimapアカウントの場合はnotlsをflagにつける。&lt;/p&gt;

&lt;p&gt;gmailの場合は/ssl/novalidation-certみたいのつける&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Ubuntu14.04 LTS でNginx FasCGI Perl</title>
      <link>http://tech.k-zak.com/2015/01/05/perl-cgi</link>
      <pubDate>Mon, 05 Jan 2015 15:51:41 +0000</pubDate>
      
      <guid>http://tech.k-zak.com/2015/01/05/perl-cgi</guid>
      <description>&lt;p&gt;古いPerlのサンプルを参考に復習したくなって、やむなく自分の開発環境にFastCGI環境をセットアップ&lt;/p&gt;

&lt;p&gt;最初、コードが間違っているのに気づかず3日ほどあれこれ調べまわっても解決せず時間を浪費した。&lt;/p&gt;

&lt;p&gt;502 bad gatewayのエラーでて、ログを見ると Cannot execute script って出てて、調べても分からんし、権限は間違ってるはず無いしでずっとつまずいてた。&lt;/p&gt;

&lt;p&gt;結局、&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo apt-get install fcgiwrap
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;※もしかしたら libgcgi-perlも必要？でもなんか下記のfastcgi-wrapper.plを使う場合に必要なやつかも&lt;br /&gt;
/etc/init.d/fcgiwrap のFCGI_USERあたりを動かしたいユーザーやグループに変更。※お好みで&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo sysv-rc-conf on fcgiwrap
sudo service fcgiwrap start
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;でFastCGIが動くようになる。&lt;br /&gt;
最初、fastcgi-wrapper.plを使う場合を参考にしてたけど、&lt;br /&gt;
参考：&lt;a href=&#34;http://ubuntu.flowconsult.at/linux/nginx-perl-fastcgi-installation-ubuntu-linux-14-04/&#34;&gt;http://ubuntu.flowconsult.at/linux/nginx-perl-fastcgi-installation-ubuntu-linux-14-04/&lt;/a&gt;&lt;br /&gt;
これだとなんかPerlのみっぽかったしTCPだったので、Unixソケットで通信にしたかったのとpythonやRubyでも動かしたかったのでfcgiwrapを使うようにした。&lt;/p&gt;

&lt;p&gt;Nginxの設定はlocationディレクティブだけ抜粋すると&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;#拡張子が.plで終わるリクエストの場合
location ~ \.pl$ {
    try_files $uri = 404;
    gzip off;
    #インストールしたfcgiwrapのソケットファイルのパス
    fastcgi_pass unix:/var/run/fcgiwrap.socket;
    fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
    #/etc/nginx/fastcgi_paramsの内容を読み込む。
    include fastcgi_params;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;で&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo service nginx restart
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;これで適用にperl書いて(シェバンはもちろん#!/usr/bin/env perl ですよ)試したら動きました。&lt;/p&gt;

&lt;p&gt;自分はplenvを使っているのですが、システムのperl読み込まれてライブラリねーぞゴルァなった事があった。謎。&lt;br /&gt;
plenvの場合、require syscall.ph とかあると駄目っぽい？&lt;/p&gt;

&lt;p&gt;この記事書いてる時に見つけた他の方のWeb。先にここを見つけたかった。。。&lt;br /&gt;
参考：&lt;a href=&#34;http://ekzemplaro.org/data_base/doc/web_server/nginx/&#34;&gt;http://ekzemplaro.org/data_base/doc/web_server/nginx/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;やれやれですよ。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>新しく開発環境作成中</title>
      <link>http://tech.k-zak.com/2014/09/15/dev-env-vm</link>
      <pubDate>Mon, 15 Sep 2014 15:48:13 +0000</pubDate>
      
      <guid>http://tech.k-zak.com/2014/09/15/dev-env-vm</guid>
      <description>

&lt;h3 id=&#34;ubuntu14-64bit-のvm作成&#34;&gt;Ubuntu14(64bit)のVM作成&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;イメージからVMWareFusionに作成&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;ホームディレクトリ以下のディレクトリ群が日本語なので英語名に変更&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;ターミナルから LANG=C xdg-user-dirs-gtk-update を実行
LANG=C xdg-user-dirs-gtk-update&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;設定画面が出てくるので、そのままOK&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;VMWare toolsをインストール&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;VMWareのメニューバーからインストールってやると仮想CDがマウントされるのでデスクトップあたりに展開&lt;/li&gt;
&lt;li&gt;展開したディレクトリの中に入ってインストール実行&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;aptのアップデートとアップグレード
    sudo apt-get update&lt;br /&gt;
    sudo apt-get upgrade&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Dropboxクライアントのインストール&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;FirefoxでDropbox検索してログイン→クライアントツールをダウンロードしてインストール&lt;/li&gt;
&lt;li&gt;Dropboxを入れる理由は次のEmacsの設定ファイルをDropboxで共有しているから&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Emacsのインストール
    sudo apt-get install emacs24&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Dropboxにある設定ファイル群(emacs.d)のシンボリックリンクを作成&lt;/li&gt;
&lt;li&gt;作成したシンボリックリンクの名前変更 ※ダイレクトに.emacs.dのリンクを作成だとうまく行かなかった
ln -s ~/Dropbox/emacs.d ~/emacs.d&lt;br /&gt;
mv ~/emacs.d ~/.emacs.d
&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;バージョン管理のインストール
    sudo apt-get install git&lt;br /&gt;
    sudo apt-get install mercurial&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;nginxのインストール
    sudo apt-get install nginx&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;xEnvや各バージョンのインストールに必要になる諸々のインストール
    sudo add-apt-repository ppa:webupd8team/java&lt;br /&gt;
    sudo apt-get update&lt;br /&gt;
    sudo apt-get install oracle-java7-installer ※for jruby&lt;br /&gt;
    sudo apt-get install oracle-java8-installer ※必要であれば。&lt;br /&gt;
    sudo update-alternatives &amp;ndash;config java&lt;br /&gt;
    ※java7を選択する&lt;br /&gt;
    sudo apt-get install g++ ※これをインストールしないとインストール失敗する&lt;br /&gt;
    sudo apt-get install libssl-dev ※これをインストールしないとインストール失敗する&lt;br /&gt;
    sudo apt-get install build-essential ※pyenvで必要になるようだ&lt;br /&gt;
    sudo apt-get install curl ※ndenv install &amp;ndash;list で必要になる&lt;br /&gt;
    sudo apt-get install libjpeg-dev ※phpのインストールで必要になる&lt;br /&gt;
    sudo apt-get install re2c ※phpのインストールで必要になる&lt;br /&gt;
    sudo apt-get install bison ※phpのインストールで必要になる&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;rbenvのインストール
    git clone &lt;a href=&#34;https://github.com/sstephenson/rbenv.git&#34;&gt;https://github.com/sstephenson/rbenv.git&lt;/a&gt; ~/.rbenv&lt;br /&gt;
    git clone &lt;a href=&#34;https://github.com/sstephenson/ruby-build.git&#34;&gt;https://github.com/sstephenson/ruby-build.git&lt;/a&gt; ~/.rbenv/plugins/ruby-build&lt;br /&gt;
    echo &amp;lsquo;export PATH=&amp;ldquo;$HOME/.rbenv/bin:$PATH&amp;rdquo;&amp;rsquo; &amp;gt;&amp;gt; ~/.bash_profile&lt;br /&gt;
    echo &amp;lsquo;eval &amp;ldquo;${rbenv init -)&amp;rdquo;&amp;rsquo; &amp;gt;&amp;gt; ~/.bash_profile&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;plenvのインストール
    git clone &lt;a href=&#34;https://github.com/tokuhirom/plenv.git&#34;&gt;https://github.com/tokuhirom/plenv.git&lt;/a&gt; ~/.plenv&lt;br /&gt;
    git clone &lt;a href=&#34;https://github.com/tokuhirom/Perl-Build.git&#34;&gt;https://github.com/tokuhirom/Perl-Build.git&lt;/a&gt; ~/.plenv/plugins/perl-build&lt;br /&gt;
    echo &amp;lsquo;export PATH=&amp;ldquo;$HOME/.plenv/bin:$PATH&amp;rdquo;&amp;rsquo; &amp;gt;&amp;gt; ~/.bash_profile&lt;br /&gt;
    echo &amp;lsquo;eval &amp;ldquo;${plenv init -)&amp;rdquo;&amp;rsquo; &amp;gt;&amp;gt; ~/.bash_profile&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;pyenvのインストール
    git clone &lt;a href=&#34;https://github.com/yyuu/pyenv.git&#34;&gt;https://github.com/yyuu/pyenv.git&lt;/a&gt; ~/.pyenv&lt;br /&gt;
    git clone &lt;a href=&#34;https://github.com/yyuu/python-virtualenv.git&#34;&gt;https://github.com/yyuu/python-virtualenv.git&lt;/a&gt; ~/.pyenv/plugins/python-virtualenv&lt;br /&gt;
    echo &amp;lsquo;export PATH=&amp;ldquo;$HOME/.pyenv/bin:$PATH&amp;rdquo;&amp;rsquo; &amp;gt;&amp;gt; ~/.bash_profile&lt;br /&gt;
    echo &amp;lsquo;eval &amp;ldquo;${pyenv init -)&amp;rdquo;&amp;rsquo; &amp;gt;&amp;gt; ~/.bash_profile&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;ndenvのインストール
    git clone &lt;a href=&#34;https://github.com/riywo/ndenv.git&#34;&gt;https://github.com/riywo/ndenv.git&lt;/a&gt; ~/.ndenv&lt;br /&gt;
    git clone &lt;a href=&#34;https://github.com/riywo/node-build.git&#34;&gt;https://github.com/riywo/node-build.git&lt;/a&gt; ~/.ndenv/plugins/node-build&lt;br /&gt;
    echo &amp;lsquo;export PATH=&amp;ldquo;$HOME/.ndenv/bin:$PATH&amp;rdquo;&amp;rsquo; &amp;gt;&amp;gt; ~/.bash_profile&lt;br /&gt;
    echo &amp;lsquo;eval &amp;ldquo;${ndenv init -)&amp;rdquo;&amp;rsquo; &amp;gt;&amp;gt; ~/.bash_profile&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;phpenvのインストール
    git clone &lt;a href=&#34;https://github.com/CHH/phpenv.git&#34;&gt;https://github.com/CHH/phpenv.git&lt;/a&gt; ~/.phpenv&lt;br /&gt;
    git clone &lt;a href=&#34;https://github.com/CHH/php-build.git&#34;&gt;https://github.com/CHH/php-build.git&lt;/a&gt; ~/.phpenv/plugins/php-build&lt;br /&gt;
    echo &amp;lsquo;export PATH=&amp;ldquo;$HOME/.phpenv/bin:$PATH&amp;rdquo;&amp;rsquo; &amp;gt;&amp;gt; ~/.bash_profile&lt;br /&gt;
    echo &amp;lsquo;eval &amp;ldquo;${phpenv init -)&amp;rdquo;&amp;rsquo; &amp;gt;&amp;gt; ~/.bash_profile&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;rubyのインストールとjrubyのインストール
    rbenv install 1.9.3-p547&lt;br /&gt;
    rbenv install 2.1.2&lt;br /&gt;
    rbenv install jruby-1.7.15&lt;br /&gt;
    rbenv global 2.1.2&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;perlのインストール
    plenv install 5.20.0&lt;br /&gt;
    plenv global 5.20.0&lt;br /&gt;
    plenv rehash&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;pyenvのインストール
    pyenv install jython-2.5.3&lt;br /&gt;
    pyenv install 3.4.1&lt;br /&gt;
    pyenv install 2.7.8&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;ndenvのインストール
    ndenv install v0.11.13&lt;br /&gt;
    ndenv global v0.11.13&lt;br /&gt;
    ndenv rehash&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;phpenvのインストール
    phpenv install 5.5.16&lt;br /&gt;
    phpenv install 5.6.0&lt;br /&gt;
    phpenv global 5.5.16&lt;br /&gt;
    phpenv rehash&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;php-fpmの設定
    -: listen = 127.0.0.1:9000&lt;br /&gt;
    +: /home/{{myhome}}/.phpenv/versions/5.5.16/var/run/php-fpm.sock&lt;br /&gt;
    -: ;request_terminate_timeout = 0&lt;br /&gt;
    +: request_terminate_timeout = 0&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;php.iniの設定&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;適宜timeoutやmax_sizeの調整&lt;/li&gt;
&lt;li&gt;timezoneの設定&lt;/li&gt;
&lt;li&gt;mbstringの設定&lt;/li&gt;
&lt;li&gt;拡張ライブラリ分の追記&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;mysqlのインストール
    sudo apt-get install mysq&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;nginxの設定&lt;/p&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;conf.dに作成した場合はそのままで良いが、site-availableに作成した場合はsite-enableにシンボリックリンクを作成する&lt;/p&gt;

&lt;p&gt;unicornで動かすredmineの分も記述する。※内容詳細は次のリンク(過去記事参照)&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;unicornでredmineの設定
    sudo apt-get install zlib1g-dev libreadline-dev libyaml-dev libxml2-dev libxslt-dev libsqlite3-dev libpcre3-dev libncurses-dev libgdbm-dev tk-dev libmagickwand-dev&lt;br /&gt;
    sudo apt-get install python-software-properties sysv-rc-conf&lt;br /&gt;
    gem update&lt;br /&gt;
    gem install bundler&lt;br /&gt;
    gem install mysql2
    gem install rails
    gem install rake
    echo &amp;ldquo;gem &amp;lsquo;unicorn&amp;rsquo;&amp;rdquo; &amp;gt;&amp;gt; Gemfile.local
    echo &amp;ldquo;gem &amp;lsquo;psych&amp;rsquo;&amp;rdquo; &amp;gt;&amp;gt; Gemfile.local
    bundle install &amp;ndash;without rmagick development test sqlite postgresql
&lt;br /&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;以降の作業については過去の記事を参照する。&lt;a href=&#34;http://kazunoko.sakura.ne.jp/wordpress/?p=240&#34;&gt;2014年の目標達成進捗管理的な&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;20140916&#34;&gt;20140916&lt;/h2&gt;

&lt;h3 id=&#34;memo&#34;&gt;memo&lt;/h3&gt;

&lt;p&gt;Ubuntu(64bit)のphpenvにldap入れるのに詰まった事。&lt;/p&gt;

&lt;p&gt;ldapのライブラリの場所に問題があったらしい。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo ln -s /usr/lib/x86_64-linux-gnu/libldap_r.so /usr/lib/libldap_r.so  
sudo ln -s /usr/lib/x86_64-linux-gnu/libldap.so /usr/lib/libldap.so  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Ubuntu(64bit)のphpenvにpdo-oci入れるのに詰まった事。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo ln -s /home/{{myhome}}/work/oracle/libclntsh.so.11.1 /home/{{myhome}}/work/oracle/libclntsh.so  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;phpenvでphpizeで忘れていたこと。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;./configure --with-php-config=/home/.phpenv/versions/5.5.16/bin/php-config ※phpizeの対象を指定する必要がある
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Markdownのプラグインいれたけど、散々な結果。ウケる。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Vagrant、最終的にはEC2にAnsibleでWordPressを構築を試みる</title>
      <link>http://tech.k-zak.com/2014/08/02/challenge-vagrant-ansible</link>
      <pubDate>Sat, 02 Aug 2014 16:02:30 +0000</pubDate>
      
      <guid>http://tech.k-zak.com/2014/08/02/challenge-vagrant-ansible</guid>
      <description>

&lt;p&gt;Ansibleに興味があって試そうとして、対象のサーバーをまずはVagrantを使おう、最終的にはEC2を使う形まで持って行こう。という企画です。アプリとしてはAnsibleのチュートリアルに出てきたのでWordPressを構築するのを試します。&lt;/p&gt;

&lt;p&gt;の、前にAWSのS3試したので。&lt;/p&gt;

&lt;p&gt;・IAMでアカウント作ってセキュリティポリシーでS3の接続出来るバケット制限したり、操作権限制限したり出来る&lt;/p&gt;

&lt;p&gt;・Pythonのbotoを入れて最初S3の操作しようと思ったけど、マルチパートアップロードのやり方が分からなくて挫折&lt;/p&gt;

&lt;p&gt;・AWS-CLIが楽ちん、S3に対して勝手にマルチパートアップロードしてくれる。でもWindowsで扱う場合、お決まりの文字コード警告がでますね。&lt;/p&gt;

&lt;p&gt;・PHPのSDKでS3に対するファイルのリスト取得、ダウンロード、アップロード(マルチパートアップロード)を作成。思ってたより簡単。&lt;/p&gt;

&lt;h4 id=&#34;ansible試す&#34;&gt;Ansible試す&lt;/h4&gt;

&lt;p&gt;・Vagrantで作成したboxにAnsibleでSSHに接続する場合、SSHの設定をansible.cfgにpathを書いていない場合、デフォルトの~/.ssh/configを参照してしまう。&lt;/p&gt;

&lt;p&gt;・Ansibleはインベントリファイルに書いた名前でSSHする。だからSSHの設定ファイルのHost名は合わせる&lt;/p&gt;

&lt;p&gt;・AnsibleのDocument(英語)である程度分かるんですが、ansible-docコマンドで、ある程度何が出来るか雰囲気だけ分かる。&lt;/p&gt;

&lt;p&gt;・Ansibleで指定するモジュールはユーザーを作るadd、ファイルを転送するcopy、shellを実行するshell、ファイルを実行？するcommand、aptやyumあたりがよく使うモジュール、設定ファイルで編集が1行で済む場合はlineinfile、結構いろいろある場合は完成版の設定ファイルをcopyするかJinja2で作成したtemplateファイルを使う&lt;/p&gt;

&lt;p&gt;・Ansibleのnotifyで呼び出されるのは同じRoleのhandlerに登録されたYamlのnotifyで指定した値と同じnameのものが処理されるようだ&lt;/p&gt;

&lt;p&gt;以下WordPressでApacheとMySQLを別サーバーにする場合に忘れず行いましょう的なMySQLに関する事&lt;/p&gt;

&lt;p&gt;・AnsibleでlocalhostだけじゃなくてWebサーバー側のIPのも作成しましょう&lt;/p&gt;

&lt;p&gt;・Ansibleでmy.cnfでbind_addressでWebサーバーから接続できるようループバックからIPに変更する&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Linux関係のメモ201407</title>
      <link>http://tech.k-zak.com/2014/08/02/setting-ubuntu</link>
      <pubDate>Sat, 02 Aug 2014 15:47:24 +0000</pubDate>
      
      <guid>http://tech.k-zak.com/2014/08/02/setting-ubuntu</guid>
      <description>&lt;p&gt;Ubuntu系でのchkconfigに変わるコマンドってなんだっけ？&lt;/p&gt;

&lt;p&gt;-&amp;gt; sysv-rc-confがそれに相当するがデフォルトでは入っていないのでインストールが必要&amp;#8230;&amp;#8230;&lt;/p&gt;

&lt;p&gt;checkconfigてLinux全般共通じゃなかったんだ&amp;#8230;&amp;#8230;&lt;/p&gt;

&lt;p&gt;・Ubuntu系でインストール済みのパッケージを見るのはdpkg -l(える) この後にgrep付けるヨロシ&lt;/p&gt;

&lt;p&gt;・Ubuntuでパッケージの検索はapt-cache search &lt;keyword&gt;&lt;/p&gt;

&lt;p&gt;　apt-get searchじゃなかった&amp;#8230;&amp;#8230;&lt;/p&gt;

&lt;p&gt;&lt;/keyword&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>最近やったいろいろ</title>
      <link>http://tech.k-zak.com/2014/03/16/milestone</link>
      <pubDate>Sun, 16 Mar 2014 15:12:56 +0000</pubDate>
      
      <guid>http://tech.k-zak.com/2014/03/16/milestone</guid>
      <description>&lt;p&gt;最近やったいろいろな作業。こまかく書くのめんどいから一つにまとめちゃった。&lt;/p&gt;

&lt;p&gt;◆PostgreSQLのSQLダンプ&lt;/p&gt;

&lt;p&gt;　・sqlダンプコマンドして移行先で復旧コマンドで取り込み。楽ちん！&lt;/p&gt;

&lt;p&gt;◆残念VBSバッチスクリプト&lt;/p&gt;

&lt;p&gt;　・サーバーのローカルでEscキーを送信するバッチ処理作ったけど、リモート等で開いてないと正常に動作しない&lt;/p&gt;

&lt;p&gt;　・windowsのコマンドでディレクトリ削除するコマンド&lt;/p&gt;

&lt;p&gt;◆謎！IISの設定&lt;/p&gt;

&lt;p&gt;　・IISのRewrite設定&lt;/p&gt;

&lt;p&gt;　　直接変更すると適用されない場合がある？わかりにくいGUIからRewrite設定&lt;/p&gt;

&lt;p&gt;　・DefaultWebSiteは外部からの通信を遮断して、仮想サイトだけが外部からのリクエストを受付け、&lt;/p&gt;

&lt;p&gt;　　DefaultWebSiteにリダイレクトするやり方がある。&lt;/p&gt;

&lt;p&gt;　・IISの接続数制限はユーザー単位ではなく、リクエスト単位なので1ブラウザ6リクエスト位使うため、6の倍数で設定しないと、意図した制御に出来ない&lt;/p&gt;

&lt;p&gt;◆Win8.1&lt;/p&gt;

&lt;p&gt;　・スタートパネルの左下にひっそりとアプリ一覧に移動するアイコンが。&lt;/p&gt;

&lt;p&gt;　・デスクトップやスタートパネルからwin+fで検索してもアプリ出てこない。&lt;/p&gt;

&lt;p&gt;　・win8でSQLServer2012のodbc設定がうまくいかない&lt;/p&gt;

&lt;p&gt;　　解決していない。接続先サーバーが選択できない。何か設定が足りてないのかも&lt;/p&gt;

&lt;p&gt;◆PHP&lt;/p&gt;

&lt;p&gt;　・古いやり方のPHP(PEAR使ってる)のinclude設定。ホントめんどい。&lt;/p&gt;

&lt;p&gt;　・PHPで頼りになるのはやはりPHP.net&lt;/p&gt;

&lt;p&gt;　・問い合せフォームやるとバランスよく覚える気がする(Javascript、css、php)。&lt;/p&gt;

&lt;p&gt;　　確認レイアウトを制御phpが適宜incudeするやり方はスマートかもしれない。&lt;/p&gt;

&lt;p&gt;　　※セッション制御が楽かも&lt;/p&gt;

&lt;p&gt;　・メール送信は確実なのはqdmail＆qdsmtpなんだけど、遅い。&lt;/p&gt;

&lt;p&gt;　・メール送信はPHP5.3以降でiconvモジュールが無効になっていないならZendでいいやろ&lt;/p&gt;

&lt;p&gt;　　※まさかのiconvモジュールが無効になっていると関連ライブラリでエラー出てZendMail使えない&lt;/p&gt;

&lt;p&gt;　・php5.4以降はセーフモード使えない&lt;/p&gt;

&lt;p&gt;　・システムレベルの操作を行う関数に影響が出るのでcgiで動かしましょう。&lt;/p&gt;

&lt;p&gt;　・ファイルのオーナーとかに気をつけましょう&lt;/p&gt;

&lt;p&gt;◆Apacheの設定&lt;/p&gt;

&lt;p&gt;　・SSLのヴァーチャルホスト設定する時には証明書のパスを書く&lt;/p&gt;

&lt;p&gt;　・ReWriteEngineの書き方、.htaccessにリダイレクトの設定書こうとしたけど、うまくいかなくて&lt;/p&gt;

&lt;p&gt;　　vhost.confの方に書いた&lt;/p&gt;

&lt;p&gt;◆SSH&lt;/p&gt;

&lt;p&gt;　・SSHで認証鍵ファイルを使う場合の設定方法&lt;/p&gt;

&lt;p&gt;　　ローカルで認証鍵を作成して、公開鍵をサーバーのSSHログインアカウントの~/.ssh/に放り込む&lt;/p&gt;

&lt;p&gt;　・~/.ssh/に設定ファイルを置いておくと楽&lt;/p&gt;

&lt;p&gt;◆ポートフォワーディング&lt;/p&gt;

&lt;p&gt;　・1つ目のsshがリモートサーバーに対して22ポートで接続するが別のサーバーに任意のポートを転送する設定、&lt;/p&gt;

&lt;p&gt;　　転送するポートは22じゃなくても良いので、3389転送してRDPとか出来る。&lt;/p&gt;

&lt;p&gt;◆忘れちゃうからメモ(Linuxコマンド)&lt;/p&gt;

&lt;p&gt;　・scp&lt;/p&gt;

&lt;p&gt;　　scp sourcefile remotehost target&lt;/p&gt;

&lt;p&gt;◆emacs&lt;/p&gt;

&lt;p&gt;　・ssh→sudo or su root する方法&lt;/p&gt;

&lt;p&gt;　　/ssh:SSHRemoteConfName|su(do):SSHRemoteConfName:/path/to/&lt;/p&gt;

&lt;p&gt;◆AWSについて&lt;/p&gt;

&lt;p&gt;　・EC2インスタンス楽、でもメモリが2,4,8GBの-0.5GBなのでいつもアプリ要求仕様の1ランク上を使わないといけないのが残念。&lt;/p&gt;

&lt;p&gt;　・EC2そのもにセキュリティグループの設定があるのでその設定を忘れると、Server側でFireWall無効にしても意味ない(無防備接続確認テストによる切り分けができない)。&lt;/p&gt;

&lt;p&gt;　・EC2インスタンス作成時に選択するネットワークセグメント間違うと後で大変。&lt;/p&gt;

&lt;p&gt;　・作成したインスタンスのストレージを付け替えることが出来る。&lt;/p&gt;

&lt;p&gt;　・仮想プライベートネットワーク領域を作成することが出来る。&lt;/p&gt;

&lt;p&gt;◆jQueryについて&lt;/p&gt;

&lt;p&gt;　・jQuery-Validation-Engine&lt;/p&gt;

&lt;p&gt;　　簡単だけど、複雑な制御が必要になった途端に難易度が急上昇&lt;/p&gt;

&lt;p&gt;◆新規でVPSの設定したよ&lt;/p&gt;

&lt;p&gt;　・sshの設定、rootでログインさせないとかパスワード認証許可しないとか&lt;/p&gt;

&lt;p&gt;　・iptablesの設定&lt;/p&gt;

&lt;p&gt;　・apacheのお決まりのvhost設定とか&lt;/p&gt;

&lt;p&gt;　・PHPインストール&lt;/p&gt;

&lt;p&gt;　・MySQLインストール&lt;/p&gt;

&lt;p&gt;　・PostgreSQLインストール&lt;/p&gt;

&lt;p&gt;　・Emacsインストール※設定ファイルのカスタマイズまでちゃんと面倒を見よう！あとインストールまでが長い&lt;/p&gt;

&lt;p&gt;　・Vimのインストール&lt;/p&gt;

&lt;p&gt;　・useadd,usermod,userdel,idgpasswd -a,passwd,/etc/group,checkconfig &amp;#8211;list,chown u:g,chown -h,※シンボリックリンクのグループ変更&lt;/p&gt;

&lt;p&gt;chgrp dir grp,scp file account@remotehost:/path/to/file,ln -s&lt;/p&gt;

&lt;p&gt;　・グループとアクセス権について&lt;/p&gt;

&lt;p&gt;　・apacheで使うからとユーザーのホームディレクトリ以下全てグループをapacheにしていたが、そうするとFTPで書き込みができなかった&lt;/p&gt;

&lt;p&gt;　　グループをユーザー本来のに戻して解決。apacheの場合はユーザーのグループでもユーザーがapacheグループにも入っていれば大丈夫な模様&lt;/p&gt;

&lt;p&gt;　・iptablesの設定　FWみたいなもん/etc/sysconfig/iptables ※CentOS6.4&lt;/p&gt;

&lt;p&gt;　・FTPの設定&lt;/p&gt;

&lt;p&gt;　　vsftpdがCentOS6.4にデフォルトで入っていなかったのでyum install vsftpd&lt;/p&gt;

&lt;p&gt;　　設定では、アノニマス不許可、ユーザーのホームをディレクトリにする、ユーザーリストをホワイトリストとして使うの設定&lt;/p&gt;

&lt;p&gt;　・Linux、apacheでbasic認証をする場合&lt;/p&gt;

&lt;p&gt;　・.htaccessで使うよと書く&lt;/p&gt;

&lt;p&gt;　・.htpasswdファイルにidとパスワードを書く&lt;/p&gt;

&lt;p&gt;◆MySQLからデータダンプ&lt;/p&gt;

&lt;p&gt;　・sqlで書き出して新しいDBに書きだしたsqlを取り込む。楽ちん！&lt;/p&gt;

&lt;p&gt;　・よく使うMySQLコマンド&lt;/p&gt;

&lt;p&gt;　　create database ,show databases ,show variables,create user xxx@x identified by xxx,grant all on db.table to user@localhost,drop show processlist,&lt;/p&gt;

&lt;p&gt;　・MySQLにデータダンプしたsqlファイルをインポート&lt;/p&gt;

&lt;p&gt;　　sqlファイルのある場所に移動してmysqlコマンド→. xxx.sql&lt;/p&gt;

&lt;p&gt;　　※ファイルパスの指定が楽になるのでインポートファイルの有る場所でmysqlする。&lt;/p&gt;

&lt;p&gt;◆MovableTypeの設定&lt;/p&gt;

&lt;p&gt;　・mt-config.cgi でStaticWebPathには静的ファイルを配置するディレクトリのためのパスを記述、相対パスを推奨らしい※web上のURLパスの相対パス&lt;/p&gt;

&lt;p&gt;　・mt-config.cgi でCGIPathにはmt.cgi以外のCGIスクリプトリンクを生成するためのパスを記述、AdminCGIPathがない場合はmt.cgiもこの値を使う。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>NginxでPermission denied</title>
      <link>http://tech.k-zak.com/2014/01/16/trouble-nginx</link>
      <pubDate>Thu, 16 Jan 2014 01:44:58 +0000</pubDate>
      
      <guid>http://tech.k-zak.com/2014/01/16/trouble-nginx</guid>
      <description>&lt;p&gt;開発環境&lt;/p&gt;

&lt;p&gt;OS:Ubuntu12?&lt;/p&gt;

&lt;p&gt;Webサーバー：Nginx&lt;/p&gt;

&lt;p&gt;という環境下でWindowsでホストしていたお客さんのサイトを持ってきて改修しようとしたら、&lt;/p&gt;

&lt;p&gt;jsやらcssやら画像やらが軒のみPermission denied でエラーでて表示されない。&lt;/p&gt;

&lt;p&gt;ググってみたけれども該当するものがない。&lt;/p&gt;

&lt;p&gt;※自身のテスト用のものなどはちゃんと画像等問題なく読み込める。オーナーや権限も問題ない&lt;/p&gt;

&lt;p&gt;んで、ざっとファイル見ててなんとなく気になって「Thumbs.db」を削除したら表示されるようになった。&lt;/p&gt;

&lt;p&gt;Nginxのセキュリティ機能？なのでしょうか。仕組みは調べていない。ちゃんと勉強が必要ですね。&lt;/p&gt;

&lt;p&gt;追記：どうも原因は別にあったかも。再現できない。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>2014年の目標達成進捗管理的な</title>
      <link>http://tech.k-zak.com/2014/01/04/milestone</link>
      <pubDate>Sat, 04 Jan 2014 09:23:26 +0000</pubDate>
      
      <guid>http://tech.k-zak.com/2014/01/04/milestone</guid>
      <description>

&lt;h2 id=&#34;新年-明けましておめでとうございました-良いお年を&#34;&gt;新年、明けましておめでとうございました。良いお年を。&lt;/h2&gt;

&lt;p&gt;今回は、プログラムの勉強のために作成して使っているVM(Ubuntu)にredmineを動かす。という話。&lt;/p&gt;

&lt;p&gt;事の発端は新年に目標を掲げるのは意味がない。なぜならば年が改まるとかそういうタイミングでしか掲げられないような目標は普段から取り組めない達成できない目標だから。&lt;/p&gt;

&lt;p&gt;とか、意志薄弱な人間は日が経てば目標自体忘れて結果達成できない。とか、変にハードルの高い目標にしてしまって達成できなくて早々に諦めてしまうとか。&lt;/p&gt;

&lt;p&gt;そういう話を聞いたので、ならば達成出来るように達成可能と思えるような目標をredmineでマイルストーンをチケットとして分解して期日を設定して進捗管理するのはどうだろうかと考えた。&lt;/p&gt;

&lt;p&gt;要は2014年の目標はredmineで適当な目標の進捗管理を行い、その目標を達成できるよう行動する。のが目標。&lt;/p&gt;

&lt;p&gt;という事で設定作業開始&lt;/p&gt;

&lt;h2 id=&#34;環境&#34;&gt;環境:&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;ホストOS：OS X10.9&lt;/li&gt;
&lt;li&gt;ゲストOS(今回使用する環境)：Ubuntu13.10 32bit(ずっと64bitいれたと思っていた(T_T))&lt;/li&gt;
&lt;li&gt;nginx1.4.1(以前から使用していて今回はredmine向けに設定を変更します)&lt;/li&gt;
&lt;li&gt;ruby2.0.0dev(rbenv)&lt;/li&gt;
&lt;li&gt;unicorn4.7.0&lt;/li&gt;
&lt;li&gt;rails3.2.16&lt;/li&gt;
&lt;li&gt;redmine2.4.2&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;rbenvにruby2-0を追加してデフォルトにする&#34;&gt;rbenvにruby2.0を追加してデフォルトにする&lt;/h2&gt;

&lt;p&gt;rbenvは元から入れていたので、今回は2.0を追加する作業だけ。折角だから最新を使おうってだけ。&lt;/p&gt;

&lt;p&gt;参考：&lt;a href=&#34;http://qiita.com/checkpoint/items/f8e65380d9cb0182218d&#34; target=&#34;_blank&#34;&gt;rbenvを利用して複数バージョンのRubyをインストール&lt;/a&gt;&lt;/p&gt;

&lt;pre lang=&#34;sh&#34; toggle=&#34;no&#34;&gt;~$ rbenv install 2.0.0rc-2 
~$ rbenv global 2.0.0rc-2
~$ rbenv rehash&lt;/pre&gt;

&lt;p&gt;※自分の環境ではrehashのみ、フルパス指定じゃないとエラーになる。なんでだろう。&lt;/p&gt;

&lt;p&gt;rehashの時だけsh-rehashがうんたらってエラーになる。&lt;/p&gt;

&lt;p&gt;ruby2.0の状態でgem update でアップデートしてbundler入れる。&lt;/p&gt;

&lt;pre lang=&#34;sh&#34; toggle=&#34;no&#34;&gt;~$ gem update
~$ gem install bundler
~$ gem install mysql2
~$ ~/.rbenv/bin/rbenv rehash
&lt;/pre&gt;

&lt;h2 id=&#34;mysql側の準備&#34;&gt;MySQL側の準備&lt;/h2&gt;

&lt;p&gt;redmienユーザーの作成と&lt;/p&gt;

&lt;p&gt;データベース：redmineの作成&lt;/p&gt;

&lt;h2 id=&#34;redmine入れる&#34;&gt;redmine入れる&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;http://redmine.jp/&#34; title=&#34;ここ&#34; target=&#34;_blank&#34;&gt;ここ&lt;/a&gt;から最新のredmineをダウンロード(今回は2.4.2)&lt;/p&gt;

&lt;p&gt;うっかり、nginxで設定済みのweb公開領域に入れてしまった。まぁいいか。&lt;/p&gt;

&lt;p&gt;DLしたredmineを解凍して任意のパスにredmineという名前にリネームして配置。&lt;/p&gt;

&lt;p&gt;redmineディレクトリ直下にGemfile.localを作成し、中に「gem unicorn」と書いておく。&lt;/p&gt;

&lt;pre lang=&#34;sh&#34; toggle=&#34;no&#34;&gt;~$ cd redmineディレクトリの場所
~$ echo &#34;gem &#39;unicorn&#39;&#34; &gt;&gt; Gemfile.local
~$ bundle install --without rmagick
&lt;/pre&gt;

&lt;p&gt;bundleでのインストールが初めてだったので、なんか引数与えてやってみたかったてのと、&lt;/p&gt;

&lt;p&gt;最初rmagick関連でエラー出たっぽいのでwithoutに指定した。原因は究明しない！&lt;/p&gt;

&lt;p&gt;ここまでで自分が詰まったのは、最初bundler入れた後rehashしてなくてbundle installのとろこで、bundler入ってねぇよ！apt-getで入れろ！ってエラー出てアワアワしてた。どうもbundler入れた後にもrehashが必要らしい。今は何故かは調べない。&lt;/p&gt;

&lt;p&gt;必要最小限にしてなかったせいか、ここでワンサカいろいろインストールされた。気がする。&lt;/p&gt;

&lt;p&gt;インストールされたgemを見た所、railsは上記環境で記載したバージョンになっていたです。&lt;/p&gt;

&lt;p&gt;終わったら、database.ymlのproductionの所を編集して自分の環境でDB接続できるようにする。&lt;/p&gt;

&lt;p&gt;開発用じゃなくてredmine使うだけなので最初からproduction。&lt;/p&gt;

&lt;p&gt;ここで一旦Webrickで動くか確認。&lt;/p&gt;

&lt;pre lang=&#34;sh&#34; toggle=&#34;no&#34;&gt;~$ rails s -e production
&lt;/pre&gt;

&lt;p&gt;動かねぇ！調べてたらお決まりの必要な処理がある事を知った。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://kujira16.hateblo.jp/entry/2012/09/04/144953&#34; title=&#34;その１&#34; target=&#34;_blank&#34;&gt;その１&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://blog.wnotes.net/blog/article/108&#34; title=&#34;その２&#34; target=&#34;_blank&#34;&gt;その２&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;書いてあることの真似をする。&lt;/p&gt;

&lt;pre lang=&#34;sh&#34; toggle=&#34;no&#34;&gt;~$ bundle exec rake generate_secret_token #セッションストアの秘密鍵を生成
~$ RAILS_ENV=production bundle exec rake db:migrate # データベースの初期設定を行う
~$ RAILS_ENV=production bundle exec rake redmine:load_default_data # デフォルトデータを設定
# 途中言語を聞かれるので、ja と入力
&lt;/pre&gt;

&lt;p&gt;終わったら再度チャレンジでWebrickが起動しました。やったね。&lt;/p&gt;

&lt;h2 id=&#34;redmineのadminユーザーのデフォルトのパスワードがわからない&#34;&gt;redmineのadminユーザーのデフォルトのパスワードがわからない！&lt;/h2&gt;

&lt;p&gt;解決策は&lt;a href=&#34;http://redmine.jp/tech_note/first-step/admin/login/&#34; title=&#34;ここ&#34; target=&#34;_blank&#34;&gt;ここ&lt;/a&gt;。&lt;/p&gt;

&lt;h2 id=&#34;unicornの設定&#34;&gt;unicornの設定&lt;/h2&gt;

&lt;p&gt;めんどくさくなってきた。上記の２リンクと関連リンクの&lt;a href=&#34;https://gist.github.com/arosh/3616832#file_unicorn&#34; target=&#34;_blank&#34;&gt;Github&lt;/a&gt;と、やや簡潔にかいてある&lt;a href=&#34;http://blog.scimpr.com/2013/12/14/ubuntu-server-12-04-nginx-unicorn%E3%81%A7redmine2-4-1%E3%82%92%E5%8B%95%E3%81%8B%E3%81%99/&#34; target=&#34;_blank&#34;&gt;ブログ&lt;/a&gt;を参考に設定ファイルを書いていきましたので詳細は省きます。&lt;/p&gt;

&lt;p&gt;&lt;em&gt;１，unicorn.rbを作成。&lt;/em&gt;&lt;/p&gt;

&lt;pre&gt;　　設置パスはredmineパス/config/unicorn.rb
　　unicornのgemの中にあるサンプルからみんな調整して作成しているようです。
　　ここで一回bundle exec unicorn_rails -c config/unicorn.rb -E productionて実行する
　　そうするとunicorn.rbに書いた場所に(例えばtmp/)unicorn.pidとunidorn.sockが出来る。
　　ブラウザからアクセスしてredmine動くか確認。
&lt;/pre&gt;

&lt;p&gt;&lt;em&gt;２，unicornのデーモン&lt;/em&gt;&lt;/p&gt;

&lt;pre&gt;　　/etc/init.d/の場所にunicornて名前のファイル作るます。
　　内容は上記リンクものを参考に
　　自動起動するように設定※sysv-rc-confてファイルPerlなんですね。
&lt;/pre&gt;

&lt;p&gt;自分が作業した手順としては一気にnginxの設定編集までしてから確認して動かない！ってなったんだけど、問題切り分けのために、&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;unicornの設定する前段階でWebrickで動かくか(例えば、&lt;a href=&#34;http://0.0.0.0:3000&#34;&gt;http://0.0.0.0:3000&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;unicornの設定した段階でredmine動くか(例えば、&lt;a href=&#34;http://0.0.0.0:8080&#34;&gt;http://0.0.0.0:8080&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;て接続確認しながら進めたほうが良いと思われます。&lt;/p&gt;

&lt;h2 id=&#34;nginxの設定編集&#34;&gt;nginxの設定編集&lt;/h2&gt;

&lt;p&gt;既にnginxが動いている環境のため、redmine専用の設定どうするのか戸惑ったけど、単にserverディレクティブを追加すればいいみたい。upstreamディレクティブも既存の仮想ホスト設定に悪影響は出ていないみたいだ。&lt;/p&gt;

&lt;p&gt;最終的な結論から言うと動いたけど、参考にしたブログなんかと設定がちょい違う。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;ローカルで動かしているせいかhostsファイルにredmine用の仮想URLを追記したら動いた。※追記前は参考記事と同じ設定にしても動かなかった。&lt;/li&gt;
&lt;li&gt;動かすのに使った指定は

&lt;ol&gt;
&lt;li&gt;upstreamのunixソケットの指定&lt;/li&gt;
&lt;li&gt;追加仮想ホストのlisten port&lt;/li&gt;
&lt;li&gt;追加仮想ホストのserver_name&lt;/li&gt;
&lt;li&gt;追加仮想ホストのroot&lt;/li&gt;
&lt;li&gt;追加仮想ホストのaccess_log&lt;/li&gt;
&lt;li&gt;追加仮想ホストのerror_log&lt;/li&gt;
&lt;li&gt;追加仮想ホストのlocation / にファイルじゃなかったらproxy_passの分岐&lt;/li&gt;
&lt;li&gt;上記if文が真の時のproxy_passの指定を「http://」+「upstreamに記述した名前」&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;proxy_pass以外のproxyの設定は一つも書いてないけど動きます。なんでだろう。&lt;/p&gt;

&lt;p&gt;後で気づいたんだけど、新しい仮想ホスト定義してるのに既存の仮想ホストの設定ファイルに追記してる。アホだ。もしかしたらそのせいなのかな？てか既存仮想ホストの特定のパスの場合unicorn使えばいいのかな？できるかな？&lt;/p&gt;

&lt;p&gt;という事で無事動きました。汚い文章。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>sshで、ぷごふぁ</title>
      <link>http://tech.k-zak.com/2013/10/02/ssh</link>
      <pubDate>Wed, 02 Oct 2013 17:10:04 +0000</pubDate>
      
      <guid>http://tech.k-zak.com/2013/10/02/ssh</guid>
      <description>&lt;p&gt;WordPress勉強してます。テーマについてはだいたい分かったので、自作テーマとか作っていきたい。&lt;/p&gt;

&lt;p&gt;ゆくゆくは案件事例的なぽーとふぉりおサイトを作ろうと、とりあえずさくらVPSを立てて、SSHの&lt;/p&gt;

&lt;p&gt;設定をする。&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;p&gt;契約だけしてながらく放置していたので、OS再インストールしてSSHで接続しようとしたらエラー出て&lt;/p&gt;

&lt;p&gt;ぷごふぁ！ってなった。調べたら出てきました。&lt;/p&gt;

&lt;p&gt;参照： &lt;a href=&#34;http://qiita.com/wnoguchi/items/690f3f4651f8f11e4ed3&#34;&gt;http://qiita.com/wnoguchi/items/690f3f4651f8f11e4ed3&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;要は以前に接続した際のゴミが残っていて再インストールしたのでIPとポート同じなのに鍵あわないじゃん！&lt;/p&gt;

&lt;p&gt;て言うことでした。やっぱりデータを消せばいいだけだったんだ。初期化するコマンドとかないんかな？&lt;/p&gt;

&lt;p&gt;Qiitaは素人同然の自分には本当に助かる。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Perlの動作環境？について</title>
      <link>http://tech.k-zak.com/2013/01/20/study-perl</link>
      <pubDate>Sun, 20 Jan 2013 15:25:11 +0000</pubDate>
      
      <guid>http://tech.k-zak.com/2013/01/20/study-perl</guid>
      <description>&lt;p&gt;長らく更新してませんでしたが、その間にFlask試したり、最近なんかは&lt;/p&gt;

&lt;p&gt;ちょっとだけVisual C++を初心者本見ながら動かしてました。&lt;/p&gt;

&lt;p&gt;C++分かんない。&lt;/p&gt;

&lt;p&gt;さて、PerlをVPS上で動かす＆Mojolicious::Liteで作成中の簡単なFAQアプリの為、Perlを&lt;/p&gt;

&lt;p&gt;どうやって動かすのか、簡単に試したのでまとめてみた。(まとまってないし解説にもなってない)&lt;/p&gt;

&lt;p&gt;perlを使えるように設定する&lt;/p&gt;

&lt;p&gt;１，Perlを入れましょう。既に入っている場合はバージョンを確認してできるだけ偶数ナンバーの最新版を入れましょう&lt;/p&gt;

&lt;p&gt;※奇数番号のバージョンは実験要素が強いと聞いたことがありますのでperl-14.xが良いかと&lt;/p&gt;

&lt;p&gt;※perl -v でバージョンの確認ができます。&lt;/p&gt;

&lt;p&gt;２，Perlbrewを入れましょうバージョンを切り替えたりライブラリを追加したりが楽になるそうです。&lt;/p&gt;

&lt;p&gt;３，ターミナルベースで動かす&lt;/p&gt;

&lt;p&gt;ファイルの拡張子を「.pl」とかにして内容はprint &amp;#8220;Hello,World\n&amp;#8221;;とか書いて&lt;/p&gt;

&lt;p&gt;ターミナルで「perl aaa.pl」とかやると起動して処理実行しますね。&lt;/p&gt;

&lt;p&gt;厳密にはファイルエンコードはUTF-8にしましょうとか、ソースの行頭にお決まりの書き方をするとかありますけど&lt;/p&gt;

&lt;p&gt;その内容については省略するので他で調べてください。&lt;/p&gt;

&lt;p&gt;４，ApacheにCGIの設定して動かす&lt;/p&gt;

&lt;p&gt;特になんの設定もせずPerlファイルをWeb公開領域に置いてもソースをそのまま画面に出力したり、&lt;/p&gt;

&lt;p&gt;エラーになったりします。&lt;/p&gt;

&lt;p&gt;・ApacheにCGIの設定を書いていない&lt;/p&gt;

&lt;p&gt;・作成したPerlファイルに実行権限がついていない&lt;/p&gt;

&lt;p&gt;などが主な理由です。権限についてはchmodコマンドで実行権限を付与してください。&lt;/p&gt;

&lt;p&gt;Apacheの設定ファイル「httpd.conf」もしくはVirtual-Hostの設定をしているなら「httpd-vhost.conf」を&lt;/p&gt;

&lt;p&gt;開いて設定を記述します。&lt;/p&gt;

&lt;p&gt;&amp;#8212;&amp;#8212;&amp;#8212;-&lt;/p&gt;

&lt;p&gt;&lt;Directory &amp;#8220;/virtualhostdirectory/hoge&amp;#8221;&gt;&lt;/p&gt;

&lt;p&gt;AddHandler cgi-script .cgi .pl .py .rb&lt;/p&gt;

&lt;p&gt;Options All&lt;/p&gt;

&lt;p&gt;AllowOverride All&lt;/p&gt;

&lt;p&gt;Order allow,deny&lt;/p&gt;

&lt;p&gt;Allow from all&lt;/p&gt;

&lt;p&gt;&lt;/Directory&gt;&lt;/p&gt;

&lt;p&gt;&amp;#8212;&amp;#8212;&amp;#8212;-&lt;/p&gt;

&lt;p&gt;こんな感じで。「AddHandler cgi-script」に対象拡張子を連ねる感じで記述すると動くようになります。&lt;/p&gt;

&lt;p&gt;※当然LoadModuleのところでmod_cgiを読み込んでいるのが前提です。&lt;/p&gt;

&lt;p&gt;※上の例では、Perl以外にもRubyやPythonもCGiで動く設定にしてますのん。&lt;/p&gt;

&lt;p&gt;５，Apacheにmod_perlの設定をして動かす&lt;/p&gt;

&lt;p&gt;まず自分の使っているApacheの拡張モジュール置き場にmod_perl.soがいる確認。自分の場合はMBP 10.8の&lt;/p&gt;

&lt;p&gt;組込み?のApacheを使っているので/usr/libexec/apache2/mod_perl.soを確認。いた!&lt;/p&gt;

&lt;p&gt;所定の場所にファイルがない人は別途調べてファイルを入手なりコンパイルなりしてください。&lt;/p&gt;

&lt;p&gt;※ URL:&lt;a href=&#34;http://perl.apache.org/download/index.html&#34;&gt;http://perl.apache.org/download/index.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;・httpd.confのLoadModuleが沢山記述されているあたりの最後尾に「LoadModule perl_module /usr/libexec/apache2/mod_perl.so」&lt;/p&gt;

&lt;p&gt;を追記&lt;/p&gt;

&lt;p&gt;・適当なとこに下記の記述※自分の場合は上記のvirtualhostディレクトリ内に追記&lt;/p&gt;

&lt;p&gt;・上記の設定で既に普通のCGIでPerlが動くようになってしまっているのでPerl関係拡張子を除外しておくこと!&lt;/p&gt;

&lt;p&gt;&amp;#8212;&amp;#8212;&amp;#8212;-&lt;/p&gt;

&lt;p&gt;&lt;IfModule perl_module&gt;&lt;/p&gt;

&lt;p&gt;&lt;FilesMatch &amp;#8220;\.(pl|cgi)$&amp;#8221;&gt;&lt;/p&gt;

&lt;p&gt;SetHandler perl-script&lt;/p&gt;

&lt;p&gt;PerlHandler ModPerl::Registry&lt;/p&gt;

&lt;p&gt;# Options +ExecCGII&lt;/p&gt;

&lt;p&gt;Options All&lt;/p&gt;

&lt;p&gt;PerlSendHeader On&lt;/p&gt;

&lt;p&gt;&lt;/FilesMatch&gt;&lt;/p&gt;

&lt;p&gt;&lt;/IfModule&gt;&lt;/p&gt;

&lt;p&gt;&amp;#8212;&amp;#8212;&amp;#8212;-&lt;/p&gt;

&lt;p&gt;※自分の場合はOptions +ExecCGIでは動かなかったので、Allにしちゃった。&lt;/p&gt;

&lt;p&gt;apache2を再起動してうごけばmod_perlが動作していることでしょう。&lt;/p&gt;

&lt;p&gt;６，Plackで動かす&lt;/p&gt;

&lt;p&gt;・cpanmでPlackを入れる&lt;/p&gt;

&lt;p&gt;・こんな感じのソースを書く(ファイル名はsample.psgi)&lt;/p&gt;

&lt;p&gt;&amp;#8212;&amp;#8212;&amp;#8212;-&lt;/p&gt;

&lt;p&gt;#!/usr/bin/env perl&lt;/p&gt;

&lt;p&gt;#-*- coding:utf-8 -*-&lt;/p&gt;

&lt;p&gt;use strict;&lt;/p&gt;

&lt;p&gt;use warnings;&lt;/p&gt;

&lt;p&gt;my $app = sub{&lt;/p&gt;

&lt;p&gt;my $env = shift;&lt;/p&gt;

&lt;p&gt;return [&lt;/p&gt;

&lt;p&gt;200,&lt;/p&gt;

&lt;p&gt;[&amp;#8216;Content-Type&amp;#8217;=&amp;gt;&amp;#8217;text/plain&amp;#8217;],&lt;/p&gt;

&lt;p&gt;[&amp;#8220;Hello World&amp;#8221;],&lt;/p&gt;

&lt;p&gt;];&lt;/p&gt;

&lt;p&gt;};&lt;/p&gt;

&lt;p&gt;return $app;&lt;/p&gt;

&lt;p&gt;&amp;#8212;&amp;#8212;&amp;#8212;-&lt;/p&gt;

&lt;p&gt;・書いたソースファイルの有る場所で以下のコマンド実行&lt;/p&gt;

&lt;p&gt;$ plack sample.psgi&lt;/p&gt;

&lt;p&gt;・&lt;a href=&#34;http://localhost:5000&#34;&gt;http://localhost:5000&lt;/a&gt; にアクセスHello Worldが表示されれば成功!&lt;/p&gt;

&lt;p&gt;７，StarmanてやつならMojoliciousで作ったアプリも動くらしいぜ!?&lt;/p&gt;

&lt;p&gt;・cpanmでStarmanを入れる&lt;/p&gt;

&lt;p&gt;・Mojolicious(※自分のはLite)のルートディレクトリに移動して以下のコマンド実行&lt;/p&gt;

&lt;p&gt;$ starman myapp.pl ※自分のMojoアプリのメイン?ファイルの名前がmyapp.pl&lt;/p&gt;

&lt;p&gt;うまくいくと、&lt;a href=&#34;http://localhost:5000/でMojoのルートにアクセスできーる。&#34;&gt;http://localhost:5000/でMojoのルートにアクセスできーる。&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;８，ApacheにProxyの設定してApache経由でStarmanのMojoアプリにアクセス&lt;/p&gt;

&lt;p&gt;・ApacheにProxy_moduleとProxy_http_moduleが入っているか確認&lt;/p&gt;

&lt;p&gt;・Apacheの設定ファイル編集(※自分の場合はvirtualhostの部分に追記)&lt;/p&gt;

&lt;p&gt;※以下の内容をVirtualhostディレクティブ内に追記、自分の場合はDirectoryディレクティブの前に記述&lt;/p&gt;

&lt;p&gt;&amp;#8212;&amp;#8212;&amp;#8212;-&lt;/p&gt;

&lt;p&gt;ProxyPass /studies/studyPerl/psgi/ &lt;a href=&#34;http://localhost:5000/&#34;&gt;http://localhost:5000/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;ProxyPassReverse /studies/studyPerl/psgi &lt;a href=&#34;http://localhost:5000/&#34;&gt;http://localhost:5000/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&amp;#8212;&amp;#8212;&amp;#8212;-&lt;/p&gt;

&lt;p&gt;※pathはもちろん適宜読み替えましょうね&lt;/p&gt;

&lt;p&gt;これで上記プロキシに設定したURLにアクセスして無事Mojoアプリが動いてたらOK!&lt;/p&gt;

&lt;p&gt;※Apacheの設定変えたらApache再起動とかアクセスする前にStarman起動済みなのはモチロンですよ&lt;/p&gt;

&lt;p&gt;これでVPSにperl入れてMojoアプリ動かす準備が出来たかな?&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>フレームワークちょいちょい</title>
      <link>http://tech.k-zak.com/2012/10/21/scriptlanguage-frameworks</link>
      <pubDate>Sun, 21 Oct 2012 14:00:56 +0000</pubDate>
      
      <guid>http://tech.k-zak.com/2012/10/21/scriptlanguage-frameworks</guid>
      <description>&lt;p&gt;ここ最近はフレームワークを少し触ってる。&lt;/p&gt;

&lt;p&gt;Perl：Mojolicious::Lite&lt;/p&gt;

&lt;p&gt;→DBをFileMakerで簡単な検索をするものを作成。Liteの場合は？APPPATH/templates直下に&lt;/p&gt;

&lt;p&gt;各ビューテンプレートファイルを置く。ベースとするレイアウトはAPPPATH/templates/&lt;/p&gt;

&lt;p&gt;layouts直下にdefault.html.epて名前で配置する。静的ファイルはAPPPATH/public配下に配置する。&lt;/p&gt;

&lt;p&gt;このあたりの説明でドンピシャ説明しているのが見つからなくて、なかなかつまづいた。&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;p&gt;Ruby：Sinatra&lt;/p&gt;

&lt;p&gt;→Hamlの書き方とか忘れてて大苦戦。あとなんかサーバー再起動しないと変更が摘要されない感じとか&lt;/p&gt;

&lt;p&gt;ちょっと苦労。Mojolicious::Liteでやったのと同じ事をSinatraでも実践。という訳でDBはFileMaker。&lt;/p&gt;

&lt;p&gt;これは前に一度やっているのでコードをちょっと変える程度だったのにとにかく上記の不可思議で苦戦。&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;p&gt;PHP：FuelPHP&lt;/p&gt;

&lt;p&gt;→最初はSilexで挑戦してたんだけど、意味不明過ぎて挫折。そんでシンプルそうなFuelに手を出す。&lt;/p&gt;

&lt;p&gt;これもDBをFileMakerで簡単な一覧表示検索という上の２つと同じ事をやるものを作成。たいぽや&lt;/p&gt;

&lt;p&gt;コンテキストでちょいちょい間違えて詰まったけど、割と簡単だった。FuelPHPの時は静的ファイルは&lt;/p&gt;

&lt;p&gt;public/assetsて階層に配置するんですね。&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;p&gt;PythonのFlaskに手を出す予定だったのに時間が足りなかったから来週はFlaskかな。&lt;/p&gt;

&lt;p&gt;OS再インストールしたせいだと思うけど、前に作ったDjangoが動かなくなってた。モジュールがインポート&lt;/p&gt;

&lt;p&gt;出来ないとかで&amp;#8230;&amp;#8230;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>趣旨変え</title>
      <link>http://tech.k-zak.com/2012/05/20/milestone</link>
      <pubDate>Sun, 20 May 2012 09:38:56 +0000</pubDate>
      
      <guid>http://tech.k-zak.com/2012/05/20/milestone</guid>
      <description>&lt;p&gt;ここのブログの内容の趣旨を変えました。&lt;/p&gt;

&lt;p&gt;元々のネタはBlogger？Googleのところに移動。&lt;/p&gt;

&lt;p&gt;ここは元々MTで少しやってた勉強メモに変更。それに伴いMTでからデータも適当に移行。&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>