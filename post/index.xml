<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on 開発メモてきな</title>
    <link>http://tech.k-zak.com/post/index.xml</link>
    <description>Recent content in Posts on 開発メモてきな</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <lastBuildDate>Mon, 08 May 2017 22:28:13 +0900</lastBuildDate>
    <atom:link href="http://tech.k-zak.com/post/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>create wordpress theme</title>
      <link>http://tech.k-zak.com/2017/05/08/create-wordpress-theme</link>
      <pubDate>Mon, 08 May 2017 22:28:13 +0900</pubDate>
      
      <guid>http://tech.k-zak.com/2017/05/08/create-wordpress-theme</guid>
      <description>

&lt;h1 id=&#34;wordpressのテーマを作成してみた&#34;&gt;WordPressのテーマを作成してみた&lt;/h1&gt;

&lt;p&gt;レスポンシブな自作レイアウトをWordPress用テーマを作成してみた。&lt;br /&gt;
今確認してみたら、いくつかおかしい箇所が見つかった(´・ω・`)&lt;/p&gt;

&lt;h2 id=&#34;大雑把な構成&#34;&gt;大雑把な構成&lt;/h2&gt;

&lt;p&gt;以下のファイルを作成した。&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;name&lt;/th&gt;
&lt;th&gt;description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;404.php&lt;/td&gt;
&lt;td&gt;404 Page&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;category.php&lt;/td&gt;
&lt;td&gt;カテゴリー一覧ページ&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;date.php&lt;/td&gt;
&lt;td&gt;年月アーカイブページ&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;footer.php&lt;/td&gt;
&lt;td&gt;フッター共通パーツ&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;front-page.php&lt;/td&gt;
&lt;td&gt;TOPページ&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;functions.php&lt;/td&gt;
&lt;td&gt;機能を記述するファイル&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;header.php&lt;/td&gt;
&lt;td&gt;ヘッダー共通パーツ&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;index.php&lt;/td&gt;
&lt;td&gt;割り当てるテンプレートが見つからなかった場合に使われるベースページ&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;page.php&lt;/td&gt;
&lt;td&gt;固定ページテンプレート&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;sidebar.php&lt;/td&gt;
&lt;td&gt;共通サイドバーパーツ&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;single.php&lt;/td&gt;
&lt;td&gt;1記事のページ&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;style.css&lt;/td&gt;
&lt;td&gt;全体のCSSここにテーマ名とかも記述する&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;tag.php&lt;/td&gt;
&lt;td&gt;タグ一覧ページ&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;parts/articles.php&lt;/td&gt;
&lt;td&gt;特定の記事の一覧を出力するパーツテンプレート&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;parts/top-header.php&lt;/td&gt;
&lt;td&gt;共通のブログヘッダーパート&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&#34;絶対top表示に使うマン&#34;&gt;絶対TOP表示に使うマン&lt;/h3&gt;

&lt;p&gt;WordPressには特定の名前のテンプレートは決められた使われ方をする。&lt;br /&gt;
その中でfront-pageはTOPに使われる最上位の名前、他いくつかあって、それらが見つからなかった場合、index.phpが使われる。&lt;/p&gt;

&lt;h3 id=&#34;パーツを呼び出す&#34;&gt;パーツを呼び出す&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;header.php : get_header() で呼ぶ&lt;/li&gt;
&lt;li&gt;footer.php : get_footer() で呼ぶ&lt;/li&gt;
&lt;li&gt;sidebar.php : get_sidebar() で呼ぶ&lt;/li&gt;
&lt;li&gt;path/to/part.php : get_template_part(&amp;lsquo;path/to/part&amp;rsquo;) で呼ぶ&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;まとめ&#34;&gt;まとめ&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;簡単な画面構成なら簡単に作れる感じ。&lt;/li&gt;
&lt;li&gt;ページネーション作り忘れた！&lt;/li&gt;
&lt;li&gt;固定ページへのURLなんか間違えた&amp;hellip;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>setting ntp on Ubuntu</title>
      <link>http://tech.k-zak.com/2017/04/24/setting-ntp-on-ubuntu</link>
      <pubDate>Mon, 24 Apr 2017 13:48:14 +0900</pubDate>
      
      <guid>http://tech.k-zak.com/2017/04/24/setting-ntp-on-ubuntu</guid>
      <description>

&lt;h1 id=&#34;ec2のubuntu14-04にntpを設定&#34;&gt;EC2のUbuntu14.04にntpを設定&lt;/h1&gt;

&lt;p&gt;事の発端は、AWSのS3へのアクセスのための認証に使用しているCognitoコードで認証エラーがでるようになった。&lt;/p&gt;

&lt;p&gt;エラー内容は&lt;strong&gt;InvalidSigunatureException&lt;/strong&gt; なんかタイムスタンプが早すぎるみたいなエラー内容。&lt;/p&gt;

&lt;p&gt;Nodeのアプリを再起動しても、AWSのCognitoの設定をみても解決せず。
タイムスタンプが早すぎるって意味わかんねーよってdateコマンドを実行してみたら、あら時刻ずれてるじゃない。。&lt;/p&gt;

&lt;p&gt;要はCognitoでトークンを生成するためのタイムスタンプがずれるのでどうしたってエラーになっちゃう問題。&lt;/p&gt;

&lt;p&gt;時刻がずれていることが原因と分かったので、暫定措置として時刻をあわせる(日本標準時)。
※サーバーはUbuntu14.04&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo ntpdate ntp.nict.jp
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;※前提としてntpdateがインストールされていること&lt;/p&gt;

&lt;p&gt;いろいろ調べていたら、EC2でUbuntuを使うならNTPサーバーを利用して下さい的な感じだった。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://forums.aws.amazon.com/thread.jspa?messageID=249603&#34;&gt;EC2インスタンスでの時刻同期について&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;ntpを入れる&#34;&gt;NTPを入れる&lt;/h2&gt;

&lt;p&gt;根本解決のため、NTPサーバー機能をいれる。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo apt-get install -y ntp
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;そんで設定ファイルを編集する。
&lt;strong&gt;/etc/ntp.conf&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;デフォルトの時刻サーバーをコメントアウト&lt;/li&gt;
&lt;li&gt;代わりに&lt;code&gt;server ntp.nict.jp&lt;/code&gt;を3行書く&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;上記の設定と内容の説明については他人の記事をご参照ください。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.server-world.info/query?os=Ubuntu_14.04&amp;amp;p=ntp&#34;&gt;NTPサーバーの構築&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://debianj.com/ubuntu/install/ntp&#34;&gt;NTPで時刻合わせ&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;編集したらNTPサーバービスを再起動する&lt;/p&gt;

&lt;h2 id=&#34;ぐお-タイムゾーンが&#34;&gt;ぐお、タイムゾーンが&lt;/h2&gt;

&lt;p&gt;作業したサーバー(どちらもUbuntu14.04)のうち、1つがUTC、1つがJSTのタイムゾーンになってて、キモティ悪かったので、揃える。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo timedatectl set-timezone Asia/Tokyo
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;これでOK&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Zabbix remote command</title>
      <link>http://tech.k-zak.com/2017/04/23/zabbix-remote-command</link>
      <pubDate>Sun, 23 Apr 2017 22:19:58 +0900</pubDate>
      
      <guid>http://tech.k-zak.com/2017/04/23/zabbix-remote-command</guid>
      <description>

&lt;h1 id=&#34;zabbixのアクション定義でリモートコマンドを実行する&#34;&gt;Zabbixのアクション定義でリモートコマンドを実行する&lt;/h1&gt;

&lt;p&gt;サーバーを監視するソフトウェア？Zabbixで、トリガーを元にアクションを起こす場合、メール通知やSlackにPostする以外に対象のホストもしくは任意のサーバーにコマンドを投げて実行することが出来る。&lt;/p&gt;

&lt;h2 id=&#34;agent側の設定&#34;&gt;Agent側の設定&lt;/h2&gt;

&lt;p&gt;Zabbixエージェント側(コマンドを投げつけられる側)の設定ファイルの&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;#EnableRemoteCommands = 0
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;となっている箇所をコメントアウトを解除して値を1に変更する。&lt;/p&gt;

&lt;p&gt;Zabbix-Agentサービスを再起動してエージェント側は最低限の準備完了&lt;/p&gt;

&lt;h2 id=&#34;zabbix-アクションの設定&#34;&gt;Zabbix: アクションの設定&lt;/h2&gt;

&lt;p&gt;アクションの設定で実行内容を「リモートコマンド」にして、タイプを「カスタムスクリプト」にする。&lt;/p&gt;

&lt;p&gt;コマンドはエージェント側にスクリプトを用意している場合は、それを、用意していない場合は直接コマンドを書く。&lt;/p&gt;

&lt;p&gt;パイプが使えるので、何か実行して結果をテキストファイルに追記するとかが可能。&lt;/p&gt;

&lt;p&gt;Zabbixは敷居が高いけど便利ですね。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Mastodon git clone</title>
      <link>http://tech.k-zak.com/2017/04/18/mastodon-git-clone</link>
      <pubDate>Tue, 18 Apr 2017 21:34:18 +0900</pubDate>
      
      <guid>http://tech.k-zak.com/2017/04/18/mastodon-git-clone</guid>
      <description>

&lt;h1 id=&#34;mastodonをgit-cloneして中を見てみる&#34;&gt;Mastodonをgit cloneして中を見てみる&lt;/h1&gt;

&lt;p&gt;今流行りのMastodonをgit cloneしてみた。&lt;/p&gt;

&lt;p&gt;中は設定ファイルが沢山とrails関係、フロント用のnode_modules、テスト関係、それからVagrantfileやDocker関係のファイル。&lt;/p&gt;

&lt;h2 id=&#34;ファイル群について&#34;&gt;ファイル群について&lt;/h2&gt;

&lt;p&gt;今日は内容をざっと見るところまで。&lt;/p&gt;

&lt;p&gt;内訳は、以下です。ディレクトリを意味するものは最期に「/」をつけています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;ライセンスとかReadmeとかDocumentとか

&lt;ul&gt;
&lt;li&gt;CONTRIBUTING.md&lt;/li&gt;
&lt;li&gt;ISSUE_TEMPLATE.md&lt;/li&gt;
&lt;li&gt;LICENSE&lt;/li&gt;
&lt;li&gt;README.md&lt;/li&gt;
&lt;li&gt;docs/&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;buildpack

&lt;ul&gt;
&lt;li&gt;.buildpacks&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Heroku用設定ファイル

&lt;ul&gt;
&lt;li&gt;.slugignore&lt;/li&gt;
&lt;li&gt;Procfile&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;デプロイツール(サービス)用

&lt;ul&gt;
&lt;li&gt;scalingo.json&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;コードレビュー用？設定ファイル

&lt;ul&gt;
&lt;li&gt;.codeclimate.yml&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;エディターの設定統一用設定ファイル

&lt;ul&gt;
&lt;li&gt;.editorconfig&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;git

&lt;ul&gt;
&lt;li&gt;.git/&lt;/li&gt;
&lt;li&gt;.gitignore&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;環境変数設定ファイル(もしかしたらRails専用かも？)

&lt;ul&gt;
&lt;li&gt;.env.production.sample&lt;/li&gt;
&lt;li&gt;.env.test&lt;/li&gt;
&lt;li&gt;.env.vagrant&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Ruby on Rails関係

&lt;ul&gt;
&lt;li&gt;.rspec&lt;/li&gt;
&lt;li&gt;.rubocop.yml&lt;/li&gt;
&lt;li&gt;.ruby-version&lt;/li&gt;
&lt;li&gt;Capfile&lt;/li&gt;
&lt;li&gt;Gemfile&lt;/li&gt;
&lt;li&gt;Gemfile.lock&lt;/li&gt;
&lt;li&gt;Rakefile&lt;/li&gt;
&lt;li&gt;app/&lt;/li&gt;
&lt;li&gt;app.json&lt;/li&gt;
&lt;li&gt;bin/&lt;/li&gt;
&lt;li&gt;config/&lt;/li&gt;
&lt;li&gt;config.ru&lt;/li&gt;
&lt;li&gt;db/&lt;/li&gt;
&lt;li&gt;lib/&lt;/li&gt;
&lt;li&gt;log/&lt;/li&gt;
&lt;li&gt;public/&lt;/li&gt;
&lt;li&gt;spec/&lt;/li&gt;
&lt;li&gt;tmp/&lt;/li&gt;
&lt;li&gt;vendor/&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;JavaScriptのトランスパイルとかビルドとかフロントエンド開発用とか

&lt;ul&gt;
&lt;li&gt;.nvmrc&lt;/li&gt;
&lt;li&gt;.babelrc&lt;/li&gt;
&lt;li&gt;.eslintignore&lt;/li&gt;
&lt;li&gt;.eslintrc&lt;/li&gt;
&lt;li&gt;node_modules&lt;/li&gt;
&lt;li&gt;package.json&lt;/li&gt;
&lt;li&gt;storybook/&lt;/li&gt;
&lt;li&gt;streaming/&lt;/li&gt;
&lt;li&gt;yarn.lock&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;CI テスト用

&lt;ul&gt;
&lt;li&gt;.travis.yml&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Vagrant

&lt;ul&gt;
&lt;li&gt;.vagrant/&lt;/li&gt;
&lt;li&gt;Vagrantfile&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Docker

&lt;ul&gt;
&lt;li&gt;.dockerignore&lt;/li&gt;
&lt;li&gt;Dockerfile&lt;/li&gt;
&lt;li&gt;docker-compose.yml&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;きになったところ&#34;&gt;きになったところ&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;BabelでES7？やデコレータをトランスパイルするためにPlugin入れてる&lt;/li&gt;
&lt;li&gt;ドイツの人が作ったからかScalingoなんていうヨーロッパ圏で流行ってるのかもしれないデプロイツール入ってた&lt;/li&gt;
&lt;li&gt;プルリクされるの前提だからか今時当たり前なのか知りませんがコードレビューサービス用やコーディングルール統一用の設定ファイルが入っていた&lt;/li&gt;
&lt;li&gt;Storybook面白そう&lt;/li&gt;
&lt;li&gt;yarn使ってる？&lt;/li&gt;
&lt;li&gt;Vagrantでのプロビジョニングがshell(Docker出てきて以降シェルゴリが一般的になった気がする。。。)&lt;/li&gt;
&lt;li&gt;Vagrantで、rubyはrbenvで入れるのに、nodeはパッケージで入れてる(バージョンにこだわりはない？)&lt;/li&gt;
&lt;li&gt;VagrantではOSにUbuntu14.04(trusty)を使用している(DebianでもOpenSUSEじゃないんだ)&lt;/li&gt;
&lt;li&gt;Dockerの場合はAlpineなのね。&lt;/li&gt;
&lt;li&gt;Railsのことさっぱりだけど、どうやらsidekiqというgemを使って非同期なキューの処理を実現しているらしい、redisをバックエンドに使うようだ&lt;/li&gt;
&lt;li&gt;Webサーバー用意してリバースプロキシって構造ではないんですね。&lt;/li&gt;
&lt;li&gt;Rails = Unicornというイメージでしたが、Rails5からはPumaが標準搭載とのことでPumaを使っているらしい&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;多分なんですけど、envファイルを読み解けば、自分用の公開インスタンスを立てることはできそう。
VPSか、Herokuか、単体のDockerコンテナにするかは分かりませんが。&lt;/p&gt;

&lt;p&gt;ひとまず、開発用として？1人で動かす分にはVagrantfileの設定にある通り、メモリ1GBで足りる模様。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>2017 04 09 daily</title>
      <link>http://tech.k-zak.com/2017/04/09/2017-04-09-daily</link>
      <pubDate>Sun, 09 Apr 2017 23:11:59 +0900</pubDate>
      
      <guid>http://tech.k-zak.com/2017/04/09/2017-04-09-daily</guid>
      <description>

&lt;h1 id=&#34;進捗ありません&#34;&gt;進捗ありません&lt;/h1&gt;

&lt;p&gt;この1週間、調子が悪かったり仕事に追われたりしていて何も勉強できていない。
少しだけReduxのサンプルを写経して動かない箇所を動くように修正した程度。&lt;/p&gt;

&lt;h2 id=&#34;es2015で理解が足りていない事&#34;&gt;ES2015で理解が足りていない事&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;import Hoge from &#39;./hoge&#39;; //hogeファイルの中でexport defaultされたものをHogeとなづけてimport
import * as Hoge from &#39;./hoge&#39;; //hogeファイルの中でexportされたもの全てをHogeオブジェクトとしてimport
import { Hoge } from &#39;./hoge&#39;; //hogeファイルの中でHogeという名でexportされたものをimport
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;という理解だったのだけれど、Reduxのサンプルで意図する挙動をしなくて困った。
最終的に記述ミスだったのか、勘違いだったのか、動くようになったけど。&lt;/p&gt;

&lt;p&gt;いっぺん基礎を網羅的に勉強しないとダメですね。
しかし、ECMAScript2015のドキュメント原文を読むのはなー。。。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>I use Markdown</title>
      <link>http://tech.k-zak.com/2017/04/03/i-use-markdown</link>
      <pubDate>Mon, 03 Apr 2017 22:43:54 +0900</pubDate>
      
      <guid>http://tech.k-zak.com/2017/04/03/i-use-markdown</guid>
      <description>

&lt;h1 id=&#34;気がつけばmarkdown&#34;&gt;気がつけばMarkdown&lt;/h1&gt;

&lt;p&gt;いつの頃からかドキュメントはMarkdownで書くようになった。&lt;/p&gt;

&lt;p&gt;最初はなんじゃこりゃ書きにくい、意味わからんと思っていた。&lt;/p&gt;

&lt;p&gt;でも一度慣れてしまうととても書きやすい。&lt;/p&gt;

&lt;p&gt;文章を章立てで考えられるし、VisualStudioCodeにプレビュー機能があってわかりやすい。&lt;/p&gt;

&lt;p&gt;そしてBearのようなメモアプリや、何よりHugoのようなMarkdownで書いて静的サイトを生成できるツールに世の中溢れているので、一度慣れてしまうともう戻れない。&lt;/p&gt;

&lt;p&gt;WordPressを普通のテキストを書くなんて苦行でしかない。&lt;/p&gt;

&lt;h2 id=&#34;まとめ&#34;&gt;まとめ&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Markdown最高！&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>agile progress</title>
      <link>http://tech.k-zak.com/2017/04/02/agile-progress</link>
      <pubDate>Sun, 02 Apr 2017 22:50:25 +0900</pubDate>
      
      <guid>http://tech.k-zak.com/2017/04/02/agile-progress</guid>
      <description>

&lt;h1 id=&#34;進捗&#34;&gt;進捗&lt;/h1&gt;

&lt;p&gt;直近の目標に対する結果と進捗&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;ブログや静的サイトのテーマをつくり込みたい(Pelican,Hexo,Jekyll,WordPress,Hugo,Sphinx)&lt;/li&gt;
&lt;li&gt;Makerel試したい&lt;/li&gt;
&lt;li&gt;Dockerをある程度使えるようになりたい&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;ブログや静的サイトのテーマをつくり込みたい&#34;&gt;ブログや静的サイトのテーマをつくり込みたい&lt;/h2&gt;

&lt;p&gt;Plican,Hexo,Jekyllについては完了。
Jekyllは二度と触りたく無い。&lt;/p&gt;

&lt;p&gt;4月にWordPressのテーマ作成他のテンプレートを作りたい。&lt;/p&gt;

&lt;p&gt;進捗としてはまぁまぁ。&lt;/p&gt;

&lt;p&gt;期限：5月で変わらず&lt;/p&gt;

&lt;h2 id=&#34;makerel試したい&#34;&gt;Makerel試したい&lt;/h2&gt;

&lt;p&gt;試した。&lt;/p&gt;

&lt;p&gt;カスタムメトリクスは真面目にきちんと時間を取らないとだめっぽいので諦めた。&lt;/p&gt;

&lt;p&gt;とにかく試したので完了とみなす。&lt;/p&gt;

&lt;p&gt;ちなみにトライアル期間終わったのでお金払わないとフル機能試せなくなった。&lt;/p&gt;

&lt;h2 id=&#34;dockerをある程度使えるようになりたい&#34;&gt;Dockerをある程度使えるようになりたい&lt;/h2&gt;

&lt;p&gt;久しぶりに触った。&lt;/p&gt;

&lt;p&gt;SwarmやKubernetesはハードル高いので今は諦めた。&lt;/p&gt;

&lt;p&gt;ひとまず現状のバージョンのDockerに入れ替えた。&lt;/p&gt;

&lt;p&gt;完了としたい。&lt;/p&gt;

&lt;h2 id=&#34;4月の目標&#34;&gt;4月の目標&lt;/h2&gt;

&lt;p&gt;ブログテーマの作成は引き続き行う。&lt;/p&gt;

&lt;p&gt;仕事上の別件が忙しくなるので他の課題を設定せず欲張らず地道にやっていきたい。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>recent frontend circumstance</title>
      <link>http://tech.k-zak.com/2017/04/02/recent-frontend-circumstance</link>
      <pubDate>Sun, 02 Apr 2017 22:50:14 +0900</pubDate>
      
      <guid>http://tech.k-zak.com/2017/04/02/recent-frontend-circumstance</guid>
      <description>

&lt;h1 id=&#34;最近のフロントエンド事情はまるで発展途上国の交通事情ですか&#34;&gt;最近のフロントエンド事情はまるで発展途上国の交通事情ですか&lt;/h1&gt;

&lt;p&gt;ES6で書いてES5に変換したいだけなのに、なんなんですか？&lt;/p&gt;

&lt;h2 id=&#34;es6からes5に変換したいだけなんだ&#34;&gt;ES6からES5に変換したいだけなんだ&lt;/h2&gt;

&lt;h3 id=&#34;babel&#34;&gt;Babel&lt;/h3&gt;

&lt;p&gt;Babelを使えば変換できる。。。&lt;/p&gt;

&lt;p&gt;Babelを毎回実行するのだるいからWebpackでタスクランナー的に実行する。&lt;/p&gt;

&lt;p&gt;考えはいい。それで十分だし、何も難しいことはなさそうだ。&lt;/p&gt;

&lt;p&gt;でもいざ環境を揃えようとすると&amp;hellip;&amp;hellip;&lt;/p&gt;

&lt;p&gt;以下をインストールする。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;webpack&lt;/li&gt;
&lt;li&gt;webpack-dev-server&lt;/li&gt;
&lt;li&gt;babel-core&lt;/li&gt;
&lt;li&gt;babel-loader&lt;/li&gt;
&lt;li&gt;babel-preset-es2015&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;webpack.config.jsと.babelrcにも設定を書く。&lt;/p&gt;

&lt;p&gt;これですむのならいい。&lt;/p&gt;

&lt;p&gt;実行したら文法エラーが出た。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;babel-preset-stage-0&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;を追加したら解決した。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;なんだよそれ！最初からbabel-coreだけで対応しろよ！&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;他にもbrowserify,babelifyとかいろいろプラグイン的なものがある。&lt;/p&gt;

&lt;p&gt;自分の書いたES6のコードを動くようにするのにいったいどれを入れたら動くのか分からない！&lt;/p&gt;

&lt;h3 id=&#34;babelとwebpack&#34;&gt;BabelとWebpack&lt;/h3&gt;

&lt;p&gt;webpackの設定及び.babelrcにも何を変換処理に使うのか書かないとちゃんと変換されない。&lt;/p&gt;

&lt;p&gt;webpackに書いただけじゃダメで.babelrcにも書かないといけない。という認識だけど、多分理解が足りなくて本当は綺麗な書き方があると信じてる。&lt;/p&gt;

&lt;h2 id=&#34;まとめ&#34;&gt;まとめ&lt;/h2&gt;

&lt;p&gt;ES6で書いてES5に変換するの辛い。&lt;/p&gt;

&lt;p&gt;早くブラウザが標準でES6対応してほしい。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>think about redux</title>
      <link>http://tech.k-zak.com/2017/04/02/think-about-redux</link>
      <pubDate>Sun, 02 Apr 2017 22:49:50 +0900</pubDate>
      
      <guid>http://tech.k-zak.com/2017/04/02/think-about-redux</guid>
      <description>

&lt;h1 id=&#34;reduxについて感化されたこと&#34;&gt;Reduxについて感化されたこと&lt;/h1&gt;

&lt;p&gt;Reduxについて不満に思っている部分について考察している記事を見かけた。&lt;/p&gt;

&lt;p&gt;自分もReduxを少し触ってみて「？」と思っていたことなどが言語されていた。&lt;/p&gt;

&lt;h2 id=&#34;理解して納得していること&#34;&gt;理解して納得していること&lt;/h2&gt;

&lt;p&gt;Reactの場合は上からもらうプロパティはPropsで読み取り専用。&lt;/p&gt;

&lt;p&gt;要素ごとにstateという読み書き可能なプロパティを持つ。&lt;/p&gt;

&lt;p&gt;ReduxはFluxアーキテクチャの実装。&lt;/p&gt;

&lt;p&gt;1つの状態を管理するStoreのみ。&lt;/p&gt;

&lt;p&gt;Actionを呼びReducerが状態を更新する。それぞれはプレーンなjavacsriptで書く。&lt;/p&gt;

&lt;p&gt;ここまではいい。とても素敵に感じた。&lt;/p&gt;

&lt;h2 id=&#34;受け入れがたいところ&#34;&gt;受け入れがたいところ&lt;/h2&gt;

&lt;p&gt;javascriptといえば、画面上の何かを触ったらイベントを拾って画面を変えたりとか、非同期で外からデータを持ってくるとかですよね。&lt;/p&gt;

&lt;p&gt;その非同期処理をReduxではどう書くのか、実はActionは処理のオブジェクトを生成するだけだし、Reducerは更新結果の状態を同期処理で作るだけ。&lt;/p&gt;

&lt;p&gt;ビジネスロジック的なものや非同期処理はどこに書くのか？&lt;/p&gt;

&lt;p&gt;基本的には無い。なので後付け？でてきたMiddlewareてのを作る。&lt;/p&gt;

&lt;p&gt;Reduxの思想では、非同期の処理前、処理中、処理結果(成功・失敗)をそれぞれ状態として更新する。&lt;/p&gt;

&lt;p&gt;その処理をMiddlewareに書くのだけれど&amp;hellip;書くのだけれど、これがすごく気持ち悪いと感じていた。&lt;/p&gt;

&lt;p&gt;いろいろ他の書き方が無いのかとか本来自分はどう書きたいのかということを考えると、乖離が大きく、辛い。&lt;/p&gt;

&lt;p&gt;その辺りをReducerの状態を更新する処理のところで非同期処理を呼び出して結果を入れる書き方を考えた方がいらっしゃって、外国のReduxのコミュニティに投稿したら、disられてた。&lt;/p&gt;

&lt;p&gt;Reduxの基本設計に不備があって、それをごまかすためのMiddlewareは許されて、Reducerに非同期処理結果を突っ込むのは違うとかって言うの、どうなの？&lt;/p&gt;

&lt;h2 id=&#34;まとめ&#34;&gt;まとめ&lt;/h2&gt;

&lt;p&gt;ReduxのMiddlewareがいまいち気に入らないので、非同期処理も考慮されたFluxアーキテクチャのオレオレ実装を作るしか無いのか。。。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>jaws-ug container</title>
      <link>http://tech.k-zak.com/2017/03/31/jaws-ug-container</link>
      <pubDate>Fri, 31 Mar 2017 18:01:34 +0900</pubDate>
      
      <guid>http://tech.k-zak.com/2017/03/31/jaws-ug-container</guid>
      <description>

&lt;h1 id=&#34;jaws-ug-コンテナ支部-の勉強会に行ってきた&#34;&gt;JAWS-UG コンテナ支部 の勉強会に行ってきた&lt;/h1&gt;

&lt;p&gt;行ってきた。。&lt;/p&gt;

&lt;h2 id=&#34;前佛さんのお話&#34;&gt;前佛さんのお話&lt;/h2&gt;

&lt;p&gt;Dockerは仕様でコンテナが技術っていう話。&lt;/p&gt;

&lt;p&gt;開発環境と本番とかステージングの環境が違うっていう問題はコンテナで解決できますね。&lt;/p&gt;

&lt;p&gt;Dockerのイメージ・レイヤの概念のおかげで？ベースイメージを共有したり、イメージをコピーするのにも差分レイヤだけコピーするので早いとか。&lt;/p&gt;

&lt;h3 id=&#34;他のコンテナ技術との大きな違い&#34;&gt;他のコンテナ技術との大きな違い&lt;/h3&gt;

&lt;p&gt;今までに同様の技術はあったが、Dockerが大きく違うのは、DockerHubの存在。&lt;/p&gt;

&lt;p&gt;自分が作ったイメージはもちろん、他人が作ったものも共有(流用)できる。&lt;/p&gt;

&lt;p&gt;docker イメージの Github版。&lt;/p&gt;

&lt;h3 id=&#34;注意点&#34;&gt;注意点&lt;/h3&gt;

&lt;p&gt;ストレージドライバについては要件を考慮して決めましょう的な話。&lt;/p&gt;

&lt;p&gt;このあたりを読むと理解が深まるのでしょう。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://docs.docker.jp/engine/userguide/storagedriver/imagesandcontainers.html&#34;&gt;イメージ、コンテナ、ストレージ・ドライバの理解&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://docs.docker.jp/engine/userguide/storagedriver/selectadriver.html&#34;&gt;ストレージ・ドライバの選択&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;ecs関連のアップデート&#34;&gt;ECS関連のアップデート&lt;/h2&gt;

&lt;p&gt;Windows コンテナ も試せる Windows Server 2016 の AMIもでてるよ。とか。&lt;/p&gt;

&lt;h3 id=&#34;ecrについて&#34;&gt;ECRについて&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;フルマネージドDockerレジストリサービス&lt;/li&gt;
&lt;li&gt;イメージの容量に対して課金&lt;/li&gt;
&lt;li&gt;コンテナイメージは自動的に暗号化できる設定がある&lt;/li&gt;
&lt;li&gt;もちろんIAM使える&lt;/li&gt;
&lt;li&gt;ECRをCloudTrailで追跡可能&lt;/li&gt;
&lt;li&gt;CredentialHelper使ってね&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;業務上プライベートなDockerイメージを置く場所を作りたい場合なんかいいですね。&lt;/p&gt;

&lt;h2 id=&#34;社内ビッグデータ基盤にバッチ用コンテナ環境を構築してみた&#34;&gt;社内ビッグデータ基盤にバッチ用コンテナ環境を構築してみた&lt;/h2&gt;

&lt;p&gt;既存の触りたくないバッチ環境をそのままに、API Gateway、ECS、SQSなんかを活用してバッチ処理環境を改善した話。&lt;/p&gt;

&lt;p&gt;既存のサーバーには何も追加したくない、が、curlは基本的に入っているので処理スタートをcurlから始める。&lt;/p&gt;

&lt;p&gt;API Gateway を通じてリクエストを受け取り、ECS環境でバッチ処理、処理結果をSQSで通知みたいな。&lt;/p&gt;

&lt;p&gt;ボリュームはできるだけ使わない。ログは全てCloudWatchLogsに流す。&lt;/p&gt;

&lt;p&gt;すごい。&lt;/p&gt;

&lt;h2 id=&#34;nttとdocker&#34;&gt;NTTとDocker&lt;/h2&gt;

&lt;p&gt;ECSで複数コンテナ構成な場合、SpotFleetを活用するとコストを抑えられますって話。&lt;/p&gt;

&lt;h3 id=&#34;ecsを活用する上での勘所&#34;&gt;ECSを活用する上での勘所&lt;/h3&gt;

&lt;h4 id=&#34;データについて&#34;&gt;データについて&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;なるべくDocker Volumeを使わないで済む設計にする

&lt;ul&gt;
&lt;li&gt;いつでもインスタンスを捨てられるようにする設計&lt;/li&gt;
&lt;li&gt;永続DBデータはRDS,DynamoDBに、ファイルはS3に、ログはCloudWatchLogsを活用する&lt;/li&gt;
&lt;li&gt;awslogs ログドライバ便利です。積極的に使っていきましょう。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;URLパスの設計

&lt;ul&gt;
&lt;li&gt;ALBを活用しましょう&lt;/li&gt;
&lt;li&gt;関連サービスのエントリポイントとかは環境変数で渡しましょう。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;セッションの管理

&lt;ul&gt;
&lt;li&gt;インスタンスにセッションを任せてしまうのは複数コンテナでサービスというのと相性悪い&lt;/li&gt;
&lt;li&gt;ElastiCache,Redis,Memcachedを活用しましょう。
&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;環境構築について&#34;&gt;環境構築について&lt;/h3&gt;

&lt;p&gt;書き洩らした。ECS-optimized AMIを使いましょうというのとSpotFleet活用しようみたいな&lt;/p&gt;

&lt;h2 id=&#34;datadogの人からlt&#34;&gt;Datadogの人からLT&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;Dockerはトレンドどしてきてる。&lt;/li&gt;
&lt;li&gt;コンテナを50−100個以上使うようになるとECS使うところがとても増える&lt;/li&gt;
&lt;li&gt;一度ECSなどマネージドなオーケストレーション使うようになると、使う前に比べてコンテナが増えるペースが増加？増大？する&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;一度キャッシングの味を覚えた人がどんどんキャッシングするようになるのと似てるのかな？&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Hexo etc</title>
      <link>http://tech.k-zak.com/2017/03/29/hexo-etc</link>
      <pubDate>Wed, 29 Mar 2017 22:37:07 +0900</pubDate>
      
      <guid>http://tech.k-zak.com/2017/03/29/hexo-etc</guid>
      <description>

&lt;h1 id=&#34;勉強の進捗とhexoの改修&#34;&gt;勉強の進捗とHexoの改修&lt;/h1&gt;

&lt;p&gt;いろいろいっぱいいっぱいで諦めたことと、作業したこと。&lt;/p&gt;

&lt;h2 id=&#34;スプリントの進捗&#34;&gt;スプリントの進捗&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Mackerelのプラグイン試すとか諦めて、3月までの課題終了。&lt;/li&gt;
&lt;li&gt;Docker学習、3月までの課題終了。Swarmとか諦めた。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;時間に余裕ができたらまた集中して取り組む。&lt;/p&gt;

&lt;h2 id=&#34;hexoのレイアウト改修&#34;&gt;Hexoのレイアウト改修&lt;/h2&gt;

&lt;p&gt;TOPの画像がサイトタイトルを隠しちゃう感じだったのでCSSを変えるとかしようと考えてた。&lt;/p&gt;

&lt;h3 id=&#34;行ったこと&#34;&gt;行ったこと&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;画像を変更。ブログテーマに幾分合ってそうなものに変えたつもり。&lt;/li&gt;
&lt;li&gt;画像をちょっと暗めにしたかったので少しCSS変更。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;いい感じになった。&lt;/p&gt;

&lt;h3 id=&#34;やらなかったこと&#34;&gt;やらなかったこと&lt;/h3&gt;

&lt;p&gt;全体的な直しをしようか迷ったけど、要件を十分果たしていると判断して何もしないことにした。&lt;/p&gt;

&lt;p&gt;ファイル名、URLパス、記事タイトルが同じじゃないといけないのがちょっとキモい。&lt;/p&gt;

&lt;p&gt;そんな感じ。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>docker reinstall</title>
      <link>http://tech.k-zak.com/2017/03/28/docker-reinstall</link>
      <pubDate>Tue, 28 Mar 2017 23:57:46 +0900</pubDate>
      
      <guid>http://tech.k-zak.com/2017/03/28/docker-reinstall</guid>
      <description>

&lt;h1 id=&#34;dockerを再インストールした&#34;&gt;Dockerを再インストールした&lt;/h1&gt;

&lt;p&gt;Dockerが全然触らないうちにどんどん進化していってしまったので、一旦アンインストールして、入れ直した。&lt;/p&gt;

&lt;p&gt;環境はmacOS 10.11 えるかぴたん&lt;/p&gt;

&lt;h2 id=&#34;やったこと&#34;&gt;やったこと&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;docker-machine(boot2docker)の中身を全て削除

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;docker-machine rm default&lt;/code&gt;とか&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;docker-machineを完全削除するらしいツールを使って削除実行&lt;/li&gt;
&lt;li&gt;Virtualboxを確認して環境が残っていないか確認&lt;/li&gt;
&lt;li&gt;.bash_profileに記述していた環境変数設定を削除&lt;/li&gt;
&lt;li&gt;homeディレクトリ直下の.dockerみたいな隠し領域も削除&lt;/li&gt;
&lt;li&gt;公式から改めてdocker for mac をダウンロードしてインストール&lt;/li&gt;
&lt;li&gt;ついでに改めてKitematicもダウンロードしてアプリケーションディレクトリに配置&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&#34;ハマったこと&#34;&gt;ハマったこと&lt;/h3&gt;

&lt;p&gt;単に自分が愚かなだけなんだけど、最初、docker-machineを削除した後にターミナルを再起動？しなかったため、Docker関係の環境変数が残ったま間の状態で新しく入れたDockerに対して&lt;code&gt;docker -v&lt;/code&gt;とかやってエラーを出してた。&lt;/p&gt;

&lt;p&gt;ターミナルを再起動して解決&lt;/p&gt;

&lt;h2 id=&#34;ここまで&#34;&gt;ここまで&lt;/h2&gt;

&lt;p&gt;今日はここまで。&lt;/p&gt;

&lt;p&gt;今後、先送りしてたswarmモードとやらを試したりしたい。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>challenge mackerel plugin</title>
      <link>http://tech.k-zak.com/2017/03/27/challenge-mackerel-plugin</link>
      <pubDate>Mon, 27 Mar 2017 23:36:40 +0900</pubDate>
      
      <guid>http://tech.k-zak.com/2017/03/27/challenge-mackerel-plugin</guid>
      <description>

&lt;h1 id=&#34;mackerelのカスタムメトリクスに挑戦&#34;&gt;Mackerelのカスタムメトリクスに挑戦&lt;/h1&gt;

&lt;p&gt;して撃沈。&lt;/p&gt;

&lt;h2 id=&#34;何が起きたか&#34;&gt;何が起きたか&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://mackerel.io/ja/docs/entry/advanced/custom-metrics&#34;&gt;公式のヘルプ&lt;/a&gt; を見ながら写経してUbuntu 16.04のサーバー上でカスタムメトリクスを作成して設定したが、うまくいかない。エラーが出る。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;YYYY/MM/DD 時分秒 INFO &amp;lt;metrics.plugin&amp;gt; command /path/to/sample-metrics.rb outputted to STDERR: &amp;quot;/path/to/sample-metrics.rb: 10: /home/osawa/sample-metrics.rb: Syntax error: \&amp;quot;}\&amp;quot; unexpected (expecting \&amp;quot;then\&amp;quot;)\n&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;改行が足りない？&lt;/p&gt;

&lt;p&gt;rubyファイルを単独で実行すると動くので謎。&lt;/p&gt;

&lt;p&gt;これだからRubyは。&lt;/p&gt;

&lt;p&gt;とりあえず、Mackerelは初期設定のままのメトリクスだけでいいや。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Challenged Jekyll template and hate</title>
      <link>http://tech.k-zak.com/2017/03/26/challenged-jekyll-template-and-hate</link>
      <pubDate>Sun, 26 Mar 2017 18:32:49 +0900</pubDate>
      
      <guid>http://tech.k-zak.com/2017/03/26/challenged-jekyll-template-and-hate</guid>
      <description>

&lt;h1 id=&#34;jekyllの画面-テンプレート-作った&#34;&gt;Jekyllの画面(テンプレート)作った&lt;/h1&gt;

&lt;p&gt;結論から言うと、二度と使いたくない。&lt;/p&gt;

&lt;p&gt;Pelicanの方がいいや。&lt;/p&gt;

&lt;h2 id=&#34;やりたかったこと&#34;&gt;やりたかったこと&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;TOPページ：直近5件程の記事タイトルを表示する&lt;/li&gt;
&lt;li&gt;タグごとの記事一覧ページを作る&lt;/li&gt;
&lt;li&gt;タグの一覧ページ作る&lt;/li&gt;
&lt;li&gt;カテゴリごとの記事一覧ページを作る&lt;/li&gt;
&lt;li&gt;カテゴリの一覧ページ作る&lt;/li&gt;
&lt;li&gt;アーカイブ(年月)ごとの記事一覧ページを作る&lt;/li&gt;
&lt;li&gt;アーカイブ(年月)の一覧ページ作る&lt;/li&gt;
&lt;li&gt;Aboutの固定ページを作る&lt;/li&gt;
&lt;li&gt;サイドバーにカテゴリ、タグ、アーカイブ、Aboutのリンクを作る&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;できたこと&#34;&gt;できたこと&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;TOPページ：直近5件程の記事タイトルを表示する&lt;/li&gt;
&lt;li&gt;タグごとの記事一覧ページを作る&lt;/li&gt;
&lt;li&gt;タグの一覧ページ作る&lt;/li&gt;
&lt;li&gt;カテゴリごとの記事一覧ページを作る&lt;/li&gt;
&lt;li&gt;カテゴリの一覧ページ作る&lt;/li&gt;
&lt;li&gt;Aboutの固定ページを作る&lt;/li&gt;
&lt;li&gt;サイドバーにカテゴリ、タグ、Aboutのリンクを作る&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;乗り越えた事&#34;&gt;乗り越えた事&lt;/h2&gt;

&lt;p&gt;HexoやHugoは既存のテーマをそのまま使ったからなんとも言えないけど、Pelicanは一から作った際にも苦労しなかったカテゴリやタグの一覧ページを作るのにJekyllは苦労した。&lt;/p&gt;

&lt;p&gt;標準で機能がついてなくて、pluginディレクトリにページを生成するモジュール？を書いて対応した。&lt;/p&gt;

&lt;p&gt;公式に載っているコードをほぼそのまま使いまわしたんだけど、Rubyの世界というかJekyllではカテゴリやタグごとのページ生成は静的サイトジェネレーターの標準機能のうちには入らないらしい。&lt;/p&gt;

&lt;h2 id=&#34;あきらめた事&#34;&gt;あきらめた事&lt;/h2&gt;

&lt;h3 id=&#34;アーカイブページ&#34;&gt;アーカイブページ&lt;/h3&gt;

&lt;p&gt;上記のカテゴリやタグのページ生成のノリでいけるかと思ったけど無理だった。&lt;/p&gt;

&lt;p&gt;正確には気持ちが切れた。&lt;/p&gt;

&lt;p&gt;Pelicanの場合、記事リストをgroup by　した結果をそのままfor分で使えるのだけれど、Jekyllが使っているテンプレートエンジンではできないらしく、いちいち変数にアサインしないといけない。そのくせ、変数にアサインする時はgroup by も sort もできるらしい。&lt;/p&gt;

&lt;p&gt;あと、気づかなかったんだけど、記事のデータに投稿年月日の年や月のデータがないので結局こねくり回さないと、年や月でgroup byした記事リストの抽出がうまくできない。&lt;/p&gt;

&lt;p&gt;この、年月ごとに記事リストを抽出したオブジェクトが簡単には生成できないので、サイドバーの表示もアーカイブリストの生成もうまくできそうにないので諦めた。&lt;/p&gt;

&lt;p&gt;あと、ググって出てきた書き方が汚いというか美しくないというか、「え？こんな手続き型なめんどくさい記述をテンプレートで書くの？」みたいなのが散見されて嫌になった。&lt;/p&gt;

&lt;p&gt;まったくもう。&lt;/p&gt;

&lt;h2 id=&#34;参考&#34;&gt;参考&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://jekyllrb.com/docs/home/&#34;&gt;Jekyll公式&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;まとめ&#34;&gt;まとめ&lt;/h2&gt;

&lt;p&gt;Rubyを理解したら見直せるかもしれないけど、それまではもう触りたくない。&lt;/p&gt;

&lt;p&gt;記事の投稿だけはして使い続けてみる。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>replace hugo post rule</title>
      <link>http://tech.k-zak.com/2017/03/25/replace-hugo-post-rule</link>
      <pubDate>Sat, 25 Mar 2017 22:43:59 +0900</pubDate>
      
      <guid>http://tech.k-zak.com/2017/03/25/replace-hugo-post-rule</guid>
      <description>

&lt;h1 id=&#34;hugoの記事の命名規則を見直して直した&#34;&gt;Hugoの記事の命名規則を見直して直した&lt;/h1&gt;

&lt;p&gt;辛かった。&lt;/p&gt;

&lt;p&gt;カテゴリ名、タグ名、ファイル名、記事のタイトル。これらが日本語だとジェネレート後のディレクトリ名、ファイル名、URLパス等で日本語が混ざってしまうので、片っ端から探して変更した。&lt;/p&gt;

&lt;p&gt;今後は記事内容以外では絶対に日本語を使わないようにしないと。&lt;/p&gt;

&lt;p&gt;これはおそらくHugoに限らず静的サイトジェネレーターならだいたいそうだと思う。&lt;/p&gt;

&lt;p&gt;しかしカテゴリ名やタグ名で日本語使えないのは辛いな。。&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>