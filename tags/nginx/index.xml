<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Nginx on 開発メモてきな</title>
    <link>https://tech.k-zak.com/tags/nginx/</link>
    <description>Recent content in Nginx on 開発メモてきな</description>
    <generator>Hugo</generator>
    <language>ja</language>
    <lastBuildDate>Mon, 16 Feb 2015 16:09:59 +0000</lastBuildDate>
    <atom:link href="https://tech.k-zak.com/tags/nginx/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>fmxj.js のサーバーサイドをPHPじゃなくてPerl(Mojolicious)で試す</title>
      <link>https://tech.k-zak.com/posts/challenge-fmxj/</link>
      <pubDate>Mon, 16 Feb 2015 16:09:59 +0000</pubDate>
      <guid>https://tech.k-zak.com/posts/challenge-fmxj/</guid>
      <description>&lt;p&gt;先日、SeedCodeの方がFileMakerのCustom Web Publishing の為のJavaScriptとServer side で使うPHPのサンプルをGithubで公開されてました。&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/seedcode/fmxj&#34;&gt;https://github.com/seedcode/fmxj&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;概要としては、FileMaker Server の XML公開を使う。&lt;/p&gt;&#xA;&lt;p&gt;Web公開エンジンにXML公開のためのリクエストをJavaScriptで生成してサーバーサイドスクリプト(SeedCodeのサンプルではPHP)にpostする。&lt;/p&gt;&#xA;&lt;p&gt;◆ハマった事：サンプルPHPの内容&lt;/p&gt;&#xA;&lt;p&gt;サンプルのPHPをよく読んでなかった。。。&lt;/p&gt;&#xA;&lt;p&gt;JavaScriptからFileMakerのユーザーアカウントとパスワードをpost出来るようにキーバリューを元々のpostデータに加えている。それから本来のpostデータからおまけを除くための追加分のパラメータ文字数もpostに加えている。この辺りの仕様にもんりょりする。&lt;/p&gt;&#xA;&lt;p&gt;-db=dbname&amp;amp;-lay=layname&amp;amp;-query=(q1)&amp;amp;-q1=Status&amp;amp;-q1.value=Vendor&amp;amp;-findquery みたいな通常のクエリデータに&lt;/p&gt;&#xA;&lt;p&gt;u=undefined&amp;amp;p=undefined&amp;amp;l=コンテンツの文字数&lt;/p&gt;&#xA;&lt;p&gt;ていうのがくっついてPHPにpostされてくる。&lt;/p&gt;&#xA;&lt;p&gt;それをPHP側でphp://inputでリクエストのボディを取得して余計なパラメータを削ってpostデータを作り直してcurl使ってPOSTしてた。&lt;/p&gt;&#xA;&lt;p&gt;そこに気づかずperlで再現しようとした時にpostデータを丸投げしてエラーになってしまっていた。&lt;/p&gt;&#xA;&lt;p&gt;なんでpostデータをわざわざこねくり回してるんだろう？て思ってた。&lt;/p&gt;&#xA;&lt;p&gt;サンプルって事でいろいろハードコーディングされてるけど、気にしない。&lt;/p&gt;&#xA;&lt;p&gt;◆ハマった：Nginxの設定&lt;/p&gt;&#xA;&lt;p&gt;欲をかいてPerlでサーバーサイド書くにあたって、FastCGIでさらっと書くじゃなくてMojolicious使うことにしたら&lt;/p&gt;&#xA;&lt;p&gt;WebServer→Nginxでバーチャルホスト(hoge.sample.comみたいな)とmorboで127.0.0.1:3000で動くMojoliciousになって、何が起きたかって言うとクロスドメインの問題が発生してしまい、エラーになる。&lt;/p&gt;&#xA;&lt;p&gt;これについてはNginxの設定でproxy_passでMojoliciousにリクエストがリバースプロキシされるようにして解決。&lt;/p&gt;&#xA;&lt;p&gt;しかしNginx、デフォルトではContent-Typeの書き換えができず、JavaScriptにレスポンスされるデータがXMLになっていなくて、意図する結果に終わらない。既にあるヘッダーに値を追加する処理を行ってしまう。&lt;/p&gt;&#xA;&lt;p&gt;※Nginxで add_header Content-Type ‘application/xml’してもmime-typeの設定ファイルに追記しても&lt;/p&gt;&#xA;&lt;p&gt;　Content-Type text/html;charset=UTF-8に application/xmlの値が追記されるだけになる。&lt;/p&gt;&#xA;&lt;p&gt;その結果、fmxj.jsがXMLHttpRequestのresponseXMLに値がセットされない。そしてresponseXMLがあるの前提になっているXMLをパースする処理のところで結果が空欄になって処理が終わってしまう。&lt;/p&gt;&#xA;&lt;p&gt;最初fmxj.js内部を書き換えて(responseTextをXMLに変換して)みたんだけど、コアのライブラリを触るのはよくないので、Nginxでちゃんとヘッダを書き換えられる方法を調べる、nginx-extrasを追加でインストールするとmore-set-headerというのが使えるようになり、ヘッダーの書き換えができるようになるとの事だったのでインストール。&lt;/p&gt;&#xA;&lt;p&gt;自分はUbuntuの環境なので、&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;sudo apt-get install nginx-extras&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;後はNginxの設定ファイルに(厳密に言うとリクエストを受け付けるLocationディレクティブで)&lt;/p&gt;&#xA;&lt;p&gt;more_set_headers ‘Content-Type: application/xml; charset=UTF8’;&lt;/p&gt;&#xA;&lt;p&gt;を追記、more…がヘッダーの追記ではなく書き換えなのでcharsetも忘れずに書く！&lt;/p&gt;&#xA;&lt;p&gt;これでようやく、Sample.html → fmxj.jsを使ってServerにpostリクエスト → 受けたリクエストをNginxがMojoliciousを動かしてるmorboにリバースプロキシ → MojoliciousがPOSTリクエスト受け取りXML公開のクエリパラメータ付きURLを生成して(生成しなおして)cURLをラップしたライブラリからPOST送信 → JavaScriptにレスポンスが返り、完成。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Ubuntu14.04 LTS でNginx FasCGI Perl</title>
      <link>https://tech.k-zak.com/posts/perl-cgi/</link>
      <pubDate>Mon, 05 Jan 2015 15:51:41 +0000</pubDate>
      <guid>https://tech.k-zak.com/posts/perl-cgi/</guid>
      <description>&lt;p&gt;古いPerlのサンプルを参考に復習したくなって、やむなく自分の開発環境にFastCGI環境をセットアップ&lt;/p&gt;&#xA;&lt;p&gt;最初、コードが間違っているのに気づかず3日ほどあれこれ調べまわっても解決せず時間を浪費した。&lt;/p&gt;&#xA;&lt;p&gt;502 bad gatewayのエラーでて、ログを見ると Cannot execute script って出てて、調べても分からんし、権限は間違ってるはず無いしでずっとつまずいてた。&lt;/p&gt;&#xA;&lt;p&gt;結局、&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;sudo apt-get install fcgiwrap&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;※もしかしたら libgcgi-perlも必要？でもなんか下記のfastcgi-wrapper.plを使う場合に必要なやつかも&lt;br&gt;&#xA;/etc/init.d/fcgiwrap のFCGI_USERあたりを動かしたいユーザーやグループに変更。※お好みで&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;sudo sysv-rc-conf on fcgiwrap&#xA;sudo service fcgiwrap start&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;でFastCGIが動くようになる。&lt;br&gt;&#xA;最初、fastcgi-wrapper.plを使う場合を参考にしてたけど、&lt;br&gt;&#xA;参考：&lt;a href=&#34;http://ubuntu.flowconsult.at/linux/nginx-perl-fastcgi-installation-ubuntu-linux-14-04/&#34;&gt;http://ubuntu.flowconsult.at/linux/nginx-perl-fastcgi-installation-ubuntu-linux-14-04/&lt;/a&gt;&lt;br&gt;&#xA;これだとなんかPerlのみっぽかったしTCPだったので、Unixソケットで通信にしたかったのとpythonやRubyでも動かしたかったのでfcgiwrapを使うようにした。&lt;/p&gt;&#xA;&lt;p&gt;Nginxの設定はlocationディレクティブだけ抜粋すると&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;#拡張子が.plで終わるリクエストの場合&#xA;location ~ \.pl$ {&#xA;    try_files $uri = 404;&#xA;    gzip off;&#xA;    #インストールしたfcgiwrapのソケットファイルのパス&#xA;    fastcgi_pass unix:/var/run/fcgiwrap.socket;&#xA;    fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;&#xA;    #/etc/nginx/fastcgi_paramsの内容を読み込む。&#xA;    include fastcgi_params;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;で&lt;/p&gt;</description>
    </item>
    <item>
      <title>NginxでPermission denied</title>
      <link>https://tech.k-zak.com/posts/trouble-nginx/</link>
      <pubDate>Thu, 16 Jan 2014 01:44:58 +0000</pubDate>
      <guid>https://tech.k-zak.com/posts/trouble-nginx/</guid>
      <description>&lt;p&gt;開発環境&lt;/p&gt;&#xA;&lt;p&gt;OS:Ubuntu12?&lt;/p&gt;&#xA;&lt;p&gt;Webサーバー：Nginx&lt;/p&gt;&#xA;&lt;p&gt;という環境下でWindowsでホストしていたお客さんのサイトを持ってきて改修しようとしたら、&lt;/p&gt;&#xA;&lt;p&gt;jsやらcssやら画像やらが軒のみPermission denied でエラーでて表示されない。&lt;/p&gt;&#xA;&lt;p&gt;ググってみたけれども該当するものがない。&lt;/p&gt;&#xA;&lt;p&gt;※自身のテスト用のものなどはちゃんと画像等問題なく読み込める。オーナーや権限も問題ない&lt;/p&gt;&#xA;&lt;p&gt;んで、ざっとファイル見ててなんとなく気になって「Thumbs.db」を削除したら表示されるようになった。&lt;/p&gt;&#xA;&lt;p&gt;Nginxのセキュリティ機能？なのでしょうか。仕組みは調べていない。ちゃんと勉強が必要ですね。&lt;/p&gt;&#xA;&lt;p&gt;追記：どうも原因は別にあったかも。再現できない。&lt;/p&gt;</description>
    </item>
    <item>
      <title>2014年の目標達成進捗管理的な</title>
      <link>https://tech.k-zak.com/posts/milestone/</link>
      <pubDate>Sat, 04 Jan 2014 09:23:26 +0000</pubDate>
      <guid>https://tech.k-zak.com/posts/milestone/</guid>
      <description>&lt;h2 id=&#34;新年明けましておめでとうございました良いお年を&#34;&gt;新年、明けましておめでとうございました。良いお年を。&lt;/h2&gt;&#xA;&lt;p&gt;今回は、プログラムの勉強のために作成して使っているVM(Ubuntu)にredmineを動かす。という話。&lt;/p&gt;&#xA;&lt;p&gt;事の発端は新年に目標を掲げるのは意味がない。なぜならば年が改まるとかそういうタイミングでしか掲げられないような目標は普段から取り組めない達成できない目標だから。&lt;/p&gt;&#xA;&lt;p&gt;とか、意志薄弱な人間は日が経てば目標自体忘れて結果達成できない。とか、変にハードルの高い目標にしてしまって達成できなくて早々に諦めてしまうとか。&lt;/p&gt;&#xA;&lt;p&gt;そういう話を聞いたので、ならば達成出来るように達成可能と思えるような目標をredmineでマイルストーンをチケットとして分解して期日を設定して進捗管理するのはどうだろうかと考えた。&lt;/p&gt;&#xA;&lt;p&gt;要は2014年の目標はredmineで適当な目標の進捗管理を行い、その目標を達成できるよう行動する。のが目標。&lt;/p&gt;&#xA;&lt;p&gt;という事で設定作業開始&lt;/p&gt;&#xA;&lt;h2 id=&#34;環境&#34;&gt;環境:&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;ホストOS：OS X10.9&lt;/li&gt;&#xA;&lt;li&gt;ゲストOS(今回使用する環境)：Ubuntu13.10 32bit(ずっと64bitいれたと思っていた(T_T))&lt;/li&gt;&#xA;&lt;li&gt;nginx1.4.1(以前から使用していて今回はredmine向けに設定を変更します)&lt;/li&gt;&#xA;&lt;li&gt;ruby2.0.0dev(rbenv)&lt;/li&gt;&#xA;&lt;li&gt;unicorn4.7.0&lt;/li&gt;&#xA;&lt;li&gt;rails3.2.16&lt;/li&gt;&#xA;&lt;li&gt;redmine2.4.2&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;rbenvにruby20を追加してデフォルトにする&#34;&gt;rbenvにruby2.0を追加してデフォルトにする&lt;/h2&gt;&#xA;&lt;p&gt;rbenvは元から入れていたので、今回は2.0を追加する作業だけ。折角だから最新を使おうってだけ。&lt;/p&gt;&#xA;&lt;p&gt;参考：&lt;!-- raw HTML omitted --&gt;rbenvを利用して複数バージョンのRubyをインストール&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;&#xA;&lt;!-- raw HTML omitted --&gt;&#xA;&lt;!-- raw HTML omitted --&gt;&#xA;&lt;p&gt;※自分の環境ではrehashのみ、フルパス指定じゃないとエラーになる。なんでだろう。&lt;/p&gt;&#xA;&lt;p&gt;rehashの時だけsh-rehashがうんたらってエラーになる。&lt;/p&gt;&#xA;&lt;p&gt;ruby2.0の状態でgem update でアップデートしてbundler入れる。&lt;/p&gt;&#xA;&lt;!-- raw HTML omitted --&gt;&#xA;&lt;!-- raw HTML omitted --&gt;&#xA;&lt;h2 id=&#34;mysql側の準備&#34;&gt;MySQL側の準備&lt;/h2&gt;&#xA;&lt;p&gt;redmienユーザーの作成と&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
