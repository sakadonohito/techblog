<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Pelican on 開発メモてきな</title>
    <link>https://tech.k-zak.com/tags/pelican/</link>
    <description>Recent content in Pelican on 開発メモてきな</description>
    <generator>Hugo</generator>
    <language>ja</language>
    <lastBuildDate>Mon, 20 Mar 2017 18:26:58 +0900</lastBuildDate>
    <atom:link href="https://tech.k-zak.com/tags/pelican/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Pelicanのレイアウト作成</title>
      <link>https://tech.k-zak.com/posts/create-pelican-theme/</link>
      <pubDate>Mon, 20 Mar 2017 18:26:58 +0900</pubDate>
      <guid>https://tech.k-zak.com/posts/create-pelican-theme/</guid>
      <description>&lt;h1 id=&#34;pelicanで使う自分用テーマを作成した&#34;&gt;Pelicanで使う自分用テーマを作成した&lt;/h1&gt;&#xA;&lt;p&gt;静的サイトジェネレーター用の基本的なブログレイアウトを一つ作っておくと使い回しができると思い、Python製のPelicanから着手することにしてみた。&lt;/p&gt;&#xA;&lt;p&gt;結論から言うと、なかなか時間がとれないのもあって、足掛け2ヶ月かかった。&lt;/p&gt;&#xA;&lt;h2 id=&#34;その1ベースとなるレイアウトを素組する&#34;&gt;その1：ベースとなるレイアウトを素組する&lt;/h2&gt;&#xA;&lt;p&gt;htmlとCSSのみでできるだけレスポンシブな簡易ブログ用のレイアウトを考えて作った。&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/sakadonohito/site-base-theme&#34;&gt;https://github.com/sakadonohito/site-base-theme&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;flexboxを中途半端に使っているのと、Pelicanテーマ作り終わってからフィードバックしている部分もある。ホント適当。&lt;/p&gt;&#xA;&lt;p&gt;CSSはSCSSからWebpackでビルドしているけど、限りなく必要ないレベル。&#xA;EmacsならSCSS保存する時にCSSをビルドしてくれるのでホント不要な構造、しかも作り終わる前にWebpackは2がでちゃってバージョンが古いというオマケつき。&#xA;そうです、Webpack使ってるぜアッピルがしたかっただけなのです。&lt;/p&gt;&#xA;&lt;h2 id=&#34;その2pelicanのテーマを作る&#34;&gt;その2：Pelicanのテーマを作る&lt;/h2&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;ググって出てきたシンプルなテーマをコピーして&lt;/li&gt;&#xA;&lt;li&gt;作ったベースレイアウトにまるっと取り替えて&lt;/li&gt;&#xA;&lt;li&gt;変数部分がちゃんと展開されるように調整して&lt;/li&gt;&#xA;&lt;li&gt;パーツをバラす&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;みたいな感じで作成。&lt;/p&gt;&#xA;&lt;p&gt;結局よくりようしたのは&lt;a href=&#34;http://docs.getpelican.com/en/3.6.3/themes.html&#34;&gt;公式ドキュメント&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;ハマったところ&#34;&gt;ハマったところ&lt;/h2&gt;&#xA;&lt;h3 id=&#34;1-見本にしたテーマのパーツ毎の役割がよくわからなかった&#34;&gt;1. 見本にしたテーマのパーツ毎の役割がよくわからなかった&lt;/h3&gt;&#xA;&lt;p&gt;&lt;code&gt;categories.html&lt;/code&gt;と&lt;code&gt;category.html&lt;/code&gt;ってあって、最初複数形のはカテゴリ別の一覧表示で単数系のは1記事のパーツかと思ったら、複数形はカテゴリ名の一覧で単数系が特定のカテゴリでの記事一覧だった。&#xA;タグの場合はさらに1記事用パーツレイアウトにはめ込む用の記事に関連づいたタグを横一列に並べるtaglist.htmlなんてのもあって、さらに混乱した。&lt;/p&gt;&#xA;&lt;h3 id=&#34;2-ビルド失敗した時どこでエラーが発生したのか分からない&#34;&gt;2. ビルド失敗した時どこでエラーが発生したのか分からない&lt;/h3&gt;&#xA;&lt;p&gt;ビルドのエラーログの出力設定があるのか調べていないだけなんだけど、テンプレート作成している時にビルドエラー発生したけど、どこの編集のせいか分からない(1行文法エラーで失敗したぜ！的なメッセージがでるだけ)のでこまめにビルドして確認しながらじゃないと迷路に迷い込む。&lt;/p&gt;&#xA;&lt;p&gt;ショートカットキーのタイポとかで変な場所に意図せず文字を入力してしまっているのに気づかず、ビルドが失敗した時には、身に覚えがなかったので解決に時間がかかった(2分探索みたいにコードを消したり戻したりしながらビルドしてエラー箇所を探した)。&lt;/p&gt;&#xA;&lt;h3 id=&#34;3-記事データのリストオブジェクトは生成するページのコンテキストに依存するものがある&#34;&gt;3. 記事データのリストオブジェクトは生成するページのコンテキストに依存するものがある&lt;/h3&gt;&#xA;&lt;p&gt;&lt;code&gt;period_Archives.html&lt;/code&gt;っていう特定の期間の記事リストを表示するためのパーツの上で&lt;strong&gt;articles&lt;/strong&gt;という記事リストオブジェクトは全体じゃなくて、その期間の記事リストオブジェクト。全記事のリストは代わりに&lt;strong&gt;all_articles&lt;/strong&gt;てのある。じゃぁ常に&lt;strong&gt;all_articles&lt;/strong&gt;を使えば？ってなるんだけど、TOPとか他の場所だとこの&lt;strong&gt;all_articles&lt;/strong&gt;は空欄。&lt;/p&gt;&#xA;&lt;h3 id=&#34;4-年月毎に記事のカウントを取ったりurl分ける方法の説明がおろそか&#34;&gt;4. 年月毎に記事のカウントを取ったりURL分ける方法の説明がおろそか&lt;/h3&gt;&#xA;&lt;p&gt;結論からいうと、URLについては設定ファイルに&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;MONTH_ARCHIVE_SAVE_AS &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;{date:%Y}/{date:%m}/index.html&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;他にも&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;AUTHOR_SAVE_AS とか&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;PAGE_SAVE_AS なんかもあるのよ&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;とか書いておくと、/2017/03/みたいなパスで2017年3月の記事の一覧ページが生成される。今にして思うと年のフォルダ&amp;amp;月を意味するファイルの組み合わせでよかったんじゃないか説もある。&lt;/p&gt;&#xA;&lt;p&gt;年月の記事カウントについては全記事を年でまとめた記事リストの記事リストを作成して「記事リスト」をさらに月でまとめてカウントを取るみたいなことをやる。&#xA;これはそんなようなことをするサンプルのテーマがたまたま見つかったから作れたけど見つからなかったらアーカイブのページが断念したと思う。&lt;/p&gt;&#xA;&lt;p&gt;こんな感じ&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;section&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;p&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;Archives&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/&lt;/span&gt;p&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;{&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; all_articles&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;count &lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;ul&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;{&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; year, date_year &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; all_articles&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;groupby(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;date.year&amp;#39;&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;sort(reverse&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;NEWEST_FIRST_ARCHIVES) &lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;　　{&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; month, articles &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; date_year&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;groupby(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;date.month&amp;#39;&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;sort(reverse&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;NEWEST_FIRST_ARCHIVES) &lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;　　　　&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;li&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;lt;&lt;/span&gt;a href&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/{{ year }}/{{ &amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%02d&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39; % month }}/&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;{{ year }}年{{ month }}月&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/&lt;/span&gt;a&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;({{ articles&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;count }})&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/&lt;/span&gt;li&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;　　{&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt; endfor &lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;{&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt; endfor &lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/&lt;/span&gt;ul&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;{&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;elif&lt;/span&gt; articles &lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;ul&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;{&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; year, date_year &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; articles&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;groupby(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;date.year&amp;#39;&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;sort(reverse&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;NEWEST_FIRST_ARCHIVES) &lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;　　{&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; month, articles &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; date_year&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;groupby(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;date.month&amp;#39;&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;sort(reverse&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;NEWEST_FIRST_ARCHIVES) &lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;　　　　&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;li&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;lt;&lt;/span&gt;a href&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/{{ year }}/{{ &amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%02d&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39; % month }}/&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;{{ year }}年{{ month }}月&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/&lt;/span&gt;a&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;({{ articles&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;count }})&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/&lt;/span&gt;li&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;　　{&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt; endfor &lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;{&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt; endfor &lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/&lt;/span&gt;ul&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;{&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt; endif &lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/&lt;/span&gt;section&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;正直リストオブジェクトをパイプで次の処理に渡せるのjinjaのドキュメント見なかったら想像もできなかったので、このパターンのサンプルくらいPelicanのドキュメントにも載せておいてほしい。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Pelicanを試す</title>
      <link>https://tech.k-zak.com/posts/first-pelican/</link>
      <pubDate>Mon, 20 Feb 2017 15:26:44 +0900</pubDate>
      <guid>https://tech.k-zak.com/posts/first-pelican/</guid>
      <description>&lt;h1 id=&#34;python製の静的サイトジェネレーターpelicanを試す&#34;&gt;Python製の静的サイトジェネレーターPelicanを試す&lt;/h1&gt;&#xA;&lt;p&gt;Hugo,Hexo,Jekyllと試してきて、せっかくなのでPython製のものも試そうとPelicanを試した。&lt;/p&gt;&#xA;&lt;h2 id=&#34;インストール&#34;&gt;インストール&lt;/h2&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;mkdir &amp;lt;&amp;lt;blog&amp;gt;&amp;gt;&#xA;cd &amp;lt;&amp;lt;blog&amp;gt;&amp;gt;&#xA;pip install pelican Markdown&#xA;pelican-quickstart&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;なんかいろいろ聞かれるので適当に答える。今回はS3にFTPで物理コピーをする運用のため、デプロイに関する質問は全てNo。&lt;/p&gt;&#xA;&lt;h2 id=&#34;記事を書く&#34;&gt;記事を書く&lt;/h2&gt;&#xA;&lt;p&gt;記事はcontent以下にreStructuredTextもしくはMarkdownで書きます。&#xA;content以下にディレクトリを配置するとそのディレクトリ名がカテゴリ名扱いされるらしい。当分はいいや。&#xA;もちろん、カテゴリはテキストファイルないのヘッダー？に記述できますので、カテゴリが必要だからといってディレクトリでわかなければいけないわけではありません。&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;pelican content -s pelicanconf.py&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;でoutputディレクトリに静的ファイルが生成されます。&lt;/p&gt;&#xA;&lt;p&gt;簡単ですな。&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
