<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Hugo on 開発メモてきな</title>
    <link>https://tech.k-zak.com/tags/hugo/</link>
    <description>Recent content in Hugo on 開発メモてきな</description>
    <generator>Hugo</generator>
    <language>ja</language>
    <lastBuildDate>Wed, 24 Feb 2021 04:25:49 +0900</lastBuildDate>
    <atom:link href="https://tech.k-zak.com/tags/hugo/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>been a while!</title>
      <link>https://tech.k-zak.com/posts/2021-02-24-been-a-while/</link>
      <pubDate>Wed, 24 Feb 2021 04:25:49 +0900</pubDate>
      <guid>https://tech.k-zak.com/posts/2021-02-24-been-a-while/</guid>
      <description>&lt;h2 id=&#34;久し振りにhugoを更新してみる&#34;&gt;久し振りにHugoを更新してみる&lt;/h2&gt;&#xA;&lt;p&gt;長らく何もしていなかったので色々更新するのにだいぶ手間取った。&#xA;Hugoそのものを更新するのにbrewの更新や不備を直したり、なぜかついでにEmacsを最新にアップデートしたり。&lt;/p&gt;&#xA;&lt;h3 id=&#34;更新作業したもの&#34;&gt;更新作業したもの&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;brew(brew doctorしていろいろあって大苦戦)&lt;/li&gt;&#xA;&lt;li&gt;Emacs(brewで整合性とったり動かなくなった設定直したり大苦戦)&lt;/li&gt;&#xA;&lt;li&gt;Hugo&lt;/li&gt;&#xA;&lt;li&gt;ブログのテンプレートちょこちょこ直した&lt;/li&gt;&#xA;&lt;li&gt;GitHubのSSH鍵(pushでエラー出るようになってて結局鍵を新しくした)&lt;/li&gt;&#xA;&lt;li&gt;このブログのGitHub Pagesの設定でhttpsに変更&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;新たに発見したことやったこと&#34;&gt;新たに発見したことやったこと&lt;/h3&gt;&#xA;&lt;p&gt;虚しい更新作業の合間に発見したちょい技や機能があった。&lt;/p&gt;&#xA;&lt;h4 id=&#34;1-デスクトップをきれいにする小技&#34;&gt;1. デスクトップをきれいにする小技&lt;/h4&gt;&#xA;&lt;p&gt;正確にはデスクトップを整理整頓するのを諦めて、シェルでデスクトップの表示非表示を切り替えるようにした。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;defaults write com.apple.finder CreateDesktop -boolean false &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; killAll Finder&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;でmacのデスクトップ上のものを非表示にできる(falseをtrueにすれば逆の設定になる)。&#xA;んでそのシェルをAutomatorでアプリケーションに登録してLaunchpadで呼び出して実行すれば切り替えられるという。&lt;/p&gt;&#xA;&lt;h4 id=&#34;2-pbcopy&#34;&gt;2. pbcopy&lt;/h4&gt;&#xA;&lt;p&gt;macにあるコマンド。初めて知ったような忘れていただけのような。&#xA;今回GitHubに登録する鍵(pubの方)をGitHubのページで貼り付けるのに使った。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cat id_rsa.pub | pbcopy&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;って感じでクリップボードに送り込めるのでGitHubの入力フォームで貼り付け！&#xA;便利なコマンドがあったんですね。以前はターミナル上もしくはエディタで開いたものをコピーしてたけどこれなら余計な改行やスペースが混ざり込む心配が無いですね。&lt;/p&gt;&#xA;&lt;h4 id=&#34;3-github-pagesのhttps化&#34;&gt;3. GitHub Pagesのhttps化&lt;/h4&gt;&#xA;&lt;p&gt;このブログが長らくhttpsにしないで放置していたのでどこかに移行してhttps化しようと考えていたんだけどいつの間にかGitHub Pagesはhttpsできるようになっていたんですね。&#xA;早速設定でhttpsをオンにした。&lt;/p&gt;&#xA;&lt;p&gt;やれやれですよ。。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Not Posted</title>
      <link>https://tech.k-zak.com/posts/2017-12-31-noposts/</link>
      <pubDate>Sun, 31 Dec 2017 11:49:55 +0900</pubDate>
      <guid>https://tech.k-zak.com/posts/2017-12-31-noposts/</guid>
      <description>&lt;h1 id=&#34;2017年記事にしそこねたやったこと&#34;&gt;2017年記事にしそこねたやったこと&lt;/h1&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;コマンドプロンプト(バッチファイル)&lt;/li&gt;&#xA;&lt;li&gt;コマンドプロンプトからPowershell実行&lt;/li&gt;&#xA;&lt;li&gt;シェルスクリプト&lt;/li&gt;&#xA;&lt;li&gt;AWS System Manager Run Command (sum)&lt;/li&gt;&#xA;&lt;li&gt;VagrantでSQL Server他DBもセットアップしたよ&lt;/li&gt;&#xA;&lt;li&gt;Nano Server試そうとした&lt;/li&gt;&#xA;&lt;li&gt;React Redux…etc&lt;/li&gt;&#xA;&lt;li&gt;Webpack&lt;/li&gt;&#xA;&lt;li&gt;Docker再入門とWP開発環境の作成&lt;/li&gt;&#xA;&lt;li&gt;WordPressテーマ開発用のベースを作成した&lt;/li&gt;&#xA;&lt;li&gt;AWS Lambda をPythonで&lt;/li&gt;&#xA;&lt;li&gt;AWS Lambda をNode.jsで&lt;/li&gt;&#xA;&lt;li&gt;CakePHP 3 tutorial 少しやった&lt;/li&gt;&#xA;&lt;li&gt;Vagrant でPHP開発環境作成&lt;/li&gt;&#xA;&lt;li&gt;Terraform試した&lt;/li&gt;&#xA;&lt;li&gt;Hugo用テーマを作成した&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;忙しいというよりは怠惰だったのと、Hugoのテーマを変えてからやろうと言い訳してるうちに忘れてしまった。&lt;/p&gt;&#xA;&lt;h3 id=&#34;コマンドプロンプトバッチファイル&#34;&gt;コマンドプロンプト(バッチファイル)&lt;/h3&gt;&#xA;&lt;p&gt;Windowsサーバーでバッチファイルで操作しようとした時に少しおぼえた。&lt;/p&gt;&#xA;&lt;p&gt;例えばこんなこと。実行結果を変数に入れるのが面倒。&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;setlocal enabledelayedexpansion&#xA;for /f %%a in (&amp;#39;whoami&amp;#39;) do @set watashi=%%a&#xA;echo %date% %time% !watashi! &amp;gt;&amp;gt; execute.log&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;別プロセスで実行する方法&lt;/p&gt;</description>
    </item>
    <item>
      <title>replace hugo post rule</title>
      <link>https://tech.k-zak.com/posts/2017-03-25-replace/</link>
      <pubDate>Sat, 25 Mar 2017 22:43:59 +0900</pubDate>
      <guid>https://tech.k-zak.com/posts/2017-03-25-replace/</guid>
      <description>&lt;h1 id=&#34;hugoの記事の命名規則を見直して直した&#34;&gt;Hugoの記事の命名規則を見直して直した&lt;/h1&gt;&#xA;&lt;p&gt;辛かった。&lt;/p&gt;&#xA;&lt;p&gt;カテゴリ名、タグ名、ファイル名、記事のタイトル。これらが日本語だとジェネレート後のディレクトリ名、ファイル名、URLパス等で日本語が混ざってしまうので、片っ端から探して変更した。&lt;/p&gt;&#xA;&lt;p&gt;今後は記事内容以外では絶対に日本語を使わないようにしないと。&lt;/p&gt;&#xA;&lt;p&gt;これはおそらくHugoに限らず静的サイトジェネレーターならだいたいそうだと思う。&lt;/p&gt;&#xA;&lt;p&gt;しかしカテゴリ名やタグ名で日本語使えないのは辛いな。。&lt;/p&gt;</description>
    </item>
    <item>
      <title>WordPressからHugoへ移行</title>
      <link>https://tech.k-zak.com/posts/first-hugo/</link>
      <pubDate>Sun, 19 Feb 2017 00:09:41 +0900</pubDate>
      <guid>https://tech.k-zak.com/posts/first-hugo/</guid>
      <description>&lt;h2 id=&#34;開発メモブログをwordpressからhugoへの移行&#34;&gt;開発メモブログをWordPressからHugoへの移行&lt;/h2&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;WordPressから記事をエクスポート&lt;/li&gt;&#xA;&lt;li&gt;Hugoをインストール&lt;/li&gt;&#xA;&lt;li&gt;エクスポートした記事を放り込む&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h2 id=&#34;wordpressから記事をエクスポート&#34;&gt;WordPressから記事をエクスポート&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;WordPressにHugo向けにエクスポートするプラグインを入れてデータを出す&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://mano.xyz/post/2015-09-25-migration-to-hugo-from-wordpress/&#34;&gt;参考&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;hugoをインストール&#34;&gt;Hugoをインストール&lt;/h2&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;brew install hugo&#xA;hugo new site techblog&#xA;cd  techblog&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;書き出した記事を放り込む&#34;&gt;書き出した記事を放り込む&lt;/h2&gt;&#xA;&lt;p&gt;プラグインを使ってエクスポートした記事データはHugoの&lt;code&gt;content/post&lt;/code&gt;のpostディレクトリ相当のものが吐き出されているので、中身を&lt;code&gt;content/post/&lt;/code&gt;にぶちまける。&lt;/p&gt;&#xA;&lt;h2 id=&#34;細かい設定&#34;&gt;細かい設定&lt;/h2&gt;&#xA;&lt;h3 id=&#34;テーマを入れる&#34;&gt;テーマを入れる&lt;/h3&gt;&#xA;&lt;p&gt;適当なテーマをインストール。今回はPolymer。&#xA;themeディレクトリがなかったら作ってその中で&lt;code&gt;git clone&lt;/code&gt;したらいいよ。&lt;/p&gt;&#xA;&lt;h3 id=&#34;configtomlを編集&#34;&gt;config.tomlを編集&lt;/h3&gt;&#xA;&lt;p&gt;title,baseurl,languageCode,theme,paginateを修正する。&lt;/p&gt;&#xA;&lt;p&gt;後で独自ドメインでGitHubPagesで運用するため、canonifyurls = trueを設定する。&lt;/p&gt;&#xA;&lt;p&gt;GoogleAnalyticsのコードを入れるため、config.tomlに以下を追記&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;[params]&#xA;  googleAnalyticsUserID = &amp;#34;&amp;lt;&amp;lt;code&amp;gt;&amp;gt;&amp;#34;&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;またURLの構造を検討する。&#xA;今回からパーマリンクを以下のようにした。permelink設定を追加&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;[permalinks]&#xA;  post = &amp;#34;/:year/:month/:day/:slug&amp;#34;&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;これでyyyy/mm/dd/slugというようなURLになる。&lt;/p&gt;&#xA;&lt;p&gt;URL構造を変更したため、取り込んだ記事のURL属性を消して代わりにSlug属性を追加。結構時間かかった。&lt;/p&gt;&#xA;&lt;p&gt;新しい記事を追加する時には&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;hugo new post/&amp;lt;&amp;lt;post-name&amp;gt;&amp;gt;.md&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;で記事の初期状態のものが作られるので後は内容をMarkdownで記述していく。&lt;/p&gt;&#xA;&lt;h2 id=&#34;githubpagesで公開する&#34;&gt;GitHubPagesで公開する&lt;/h2&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;GitHubにリポジトリを追加&lt;/li&gt;&#xA;&lt;li&gt;hugoコマンドで出力されるpublicディレクトリの静的ファイルをコミット&lt;/li&gt;&#xA;&lt;li&gt;settingsのGitHub Pagesの項にあるCustom domainにドメインを入れて保存。&lt;/li&gt;&#xA;&lt;li&gt;hugoのpublicにCNAMEというファイルを追加。内容は公開ドメイン名&lt;/li&gt;&#xA;&lt;li&gt;再度publicディレクトリの内容をコミット&lt;/li&gt;&#xA;&lt;li&gt;DNS(今回はRoute53)でCNAMEの設定をする。&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;今回はひとまずこんな感じ。&#xA;今後は記事の追加だけじゃなく、テーマを自作していきたい。&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
